{
    "swagger": "2.0",
    "info": {
        "description": "API-documentation for the Order management system",
        "version": "1.0.0 - created 10.03.2023",
        "title": "OMS - core",
        "contact": {
            "name": "Jan Erik Roeshol",
            "email": "jer@driw.no"
        },
        "license": {
            "name": "Copyright Driw 2021",
            "url": "https://en.wikipedia.org/wiki/Copyright"
        }
    },
    "host": "dwoms01.driw.lan:9801",
    "basePath": "/",
    "tags": [
        {
            "name": "Sales Order",
            "description": "Operations related to handling Sales Orders"
        },
        {
            "name": "Purchase Order",
            "description": "Operations related to handling Purchase Orders"
        },
        {
            "name": "Claim Order",
            "description": "Operations related to handling Claim Orders"
        },
        {
            "name": "Sales Invoice",
            "description": "Operations related to handling Invoices"
        },
        {
            "name": "Purchase Invoice",
            "description": "Operations related to handling Invoices"
        },
        {
            "name": "Purchase Shipment Note Data",
            "description": "Operations related to handling Purchase Shipment Note data"
        },
        {
            "name": "Sales Shipment Note Data",
            "description": "Operations related to handling Sales Shipment Note data"
        },
        {
            "name": "Stock",
            "description": "Operations related to handling Stocks"
        },
        {
            "name": "Transaction",
            "description": "Operations related to handling Transactions"
        },
        {
            "name": "Ledger Records",
            "description": "Operations related to handling Ledger records"
        },
        {
            "name": "Calculation Transactions",
            "description": "Operations related to handling Calculation Transactions"
        },
        {
            "name": "Price",
            "description": "Operations related to handling Prices"
        },
        {
            "name": "Product",
            "description": "Operations related to handling Products"
        },
        {
            "name": "Participant Account",
            "description": "Operations related to handling Participant Accounts"
        },
        {
            "name": "Participant",
            "description": "Operations related to handling Participants"
        },
        {
            "name": "Packaging Structure",
            "description": "Operations related to handling Packaging Structures"
        },
        {
            "name": "Category",
            "description": "Operations related to handling Categories"
        },
        {
            "name": "Incoterms",
            "description": "Operations related to handling Incoterms"
        },
        {
            "name": "Calculation Types",
            "description": "Operations related to handling Calculation Types"
        },
        {
            "name": "Users",
            "description": "Operations related to handling System Users"
        },
        {
            "name": "Application Properties",
            "description": "Operations related to handling Application Properties"
        },
        {
            "name": "Batch Jobs",
            "description": "Execute Batch Job operations"
        },
        {
            "name": "Webhook Messages",
            "description": "Republishes Webhook Messages"
        },
        {
            "name": "User Activities",
            "description": "Operations related to handling User Activities"
        },
        {
            "name": "Tariff Quota",
            "description": "Operations related to handling Tariff Quotas"
        },
        {
            "name": "Order",
            "description": "Operations related to handling Orders"
        },
        {
            "name": "Retail Cart",
            "description": "Operations related to handling Retail Cart"
        },
        {
            "name": "Retail Project",
            "description": "Operations related to handling Retail Project"
        },
        {
            "name": "Supplier Schedule",
            "description": "Operations related to handling Supplier Schedules"
        },
        {
            "name": "Supplier Schedule Frequency",
            "description": "Operations related to handling Supplier Schedules Frequency"
        },
        {
            "name": "Load Carrier Types",
            "description": "Operations related to Load Carrier Types"
        },
        {
            "name": "Get Stockout Codes",
            "description": "Operations related to handling StockOut Codes"
        },
        {
            "name": "Stock Reservation Config",
            "description": "Operations related to Stock Reservation Config"
        },
        {
            "name": "Sales Order PDF Controller",
            "description": "Operations related to handling sales order PDF report"
        },
        {
            "name": "Assortment Codes",
            "description": "Assortment Code Rest Controller"
        },
        {
            "name": "Commercial Contracts",
            "description": "Commercial Contract Rest Controller"
        },
        {
            "name": "Customer Credit",
            "description": "Customer Credit Rest Controller"
        },
        {
            "name": "Global Settings",
            "description": "Global Settings Rest Controller"
        },
        {
            "name": "ParticipantAccountTempOutage",
            "description": "Participant Account Temp Outage Controller"
        },
        {
            "name": "Price-Deviation",
            "description": "Price Deviation Rest Controller"
        },
        {
            "name": "Product Brand Codes",
            "description": "Product Brand Code Rest Controller"
        },
        {
            "name": "Sync Failure",
            "description": "APIs to retrieve master data sync failure details"
        },
        {
            "name": "Webhooks",
            "description": "Webhook Property Rest Controller"
        }
    ],
    "paths": {
        "/api/v1/account-roles": {
            "get": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Get Participant Account Roles",
                "description": "Get all Participant Account Roles",
                "operationId": "getParticipantAccountRolesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "CUSTOMER",
                                    "WAREHOUSE",
                                    "SUPPLIER",
                                    "CUSTOMS"
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/application-properties": {
            "get": {
                "tags": [
                    "Application Properties"
                ],
                "summary": "Get All Application Properties",
                "description": "Get All the Application Properties",
                "operationId": "getAllApplicationPropertiesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/assortment-codes": {
            "get": {
                "tags": [
                    "Assortment Codes"
                ],
                "summary": "Get all Assortment Codes",
                "description": "Get all Assortment Codes",
                "operationId": "getAssortmentCodesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Assortment"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/audit-trails": {
            "get": {
                "tags": [
                    "User Activities"
                ],
                "summary": "Get Audit Records relevant to the provided criteria",
                "description": "Get Audit Records relevant to the provided Purchase Order Id or Purchase Order Line Id orProduct Id or Particiapnt Id or ParticipantAccount Id",
                "operationId": "getAuditRecordsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "participantAccountId",
                        "in": "query",
                        "description": "ParticipantAccount Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "participantId",
                        "in": "query",
                        "description": "Participant Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Purchase Order Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "purchaseOrderLineId",
                        "in": "query",
                        "description": "Purchase Order Line Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "salesOrderId",
                        "in": "query",
                        "description": "Sales Order Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "salesOrderLineId",
                        "in": "query",
                        "description": "Sales Order Line Id",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AuditRecord"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/available-stocks": {
            "patch": {
                "tags": [
                    "Stock"
                ],
                "summary": "Get Available Stocks",
                "description": "Get available stocks by providing Participant Account ID, Participant Account External ID, Structure Set ID, Product ID list or Product External ID list",
                "operationId": "getAvailableStocksUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action should be equal to 'QUERY'",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false,
                        "enum": [
                            "QUERY",
                            "CREATE",
                            "BULK_QUERY",
                            "UPDATE"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "availableStockRequestDto",
                        "description": "Pick Date for available stock",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AvailableStockRequestDto"
                        }
                    },
                    {
                        "name": "pickDate",
                        "in": "query",
                        "description": "Stock request data object",
                        "required": true,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/batch-jobs": {
            "post": {
                "tags": [
                    "Batch Jobs"
                ],
                "summary": "Executes batch job operations",
                "description": "Starts a batch operation after specifying the required operation",
                "operationId": "startBatchJobUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "batchJobRequest",
                        "description": "batchJobRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchJobRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Batch Jobs"
                ],
                "summary": "Execute batch job action",
                "description": "Specified action will be executed against the provided job",
                "operationId": "executeBatchJobActionUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "batchJobActionRequest",
                        "description": "batchJobActionRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchJobActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/calculation-transactions": {
            "get": {
                "tags": [
                    "Calculation Transactions"
                ],
                "summary": "Get Calculation Transactions",
                "description": "Get Calculation Transactions by providing valid Product Id, Purchase Order Id, Sales Order Id or From date",
                "operationId": "getCalculationTransactionsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From date to get the corresponding Calculation Transactions after the specified date",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product Id to get the corresponding Calculation Transactions",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Purchase Order Id to get the corresponding Calculation Transactions",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "salesOrderId",
                        "in": "query",
                        "description": "Sales Order Id to get the corresponding Calculation Transactions",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CalculationTransaction"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/calculation-types": {
            "get": {
                "tags": [
                    "Calculation Types"
                ],
                "summary": "Get All Calculation Types",
                "description": "Get all Calculation Types",
                "operationId": "getCalculationTypesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CalculationTypeCode"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get Categories",
                "description": "Get all Categories",
                "operationId": "getCategoriesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/channel-types": {
            "get": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Get Channel Types",
                "description": "Get All the Existing Channel Types",
                "operationId": "getChannelTypeUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "EDI",
                                    "EMAIL",
                                    "NONE"
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/claim-orders": {
            "get": {
                "tags": [
                    "Claim Order"
                ],
                "summary": "Get Claim Orders",
                "description": "Get Claim Orders by providing valid Order Status or External Id",
                "operationId": "getClaimOrdersUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Customer Id to get the corresponding Claim Orders",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From date to get the corresponding Claim Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To date to get the corresponding Claim Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalReference",
                        "in": "query",
                        "description": "External Reference to get corresponding Claim Orders",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "orderStatus",
                        "in": "query",
                        "description": "Order Status to get the corresponding Claim Orders",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClaimOrder"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Claim Order"
                ],
                "summary": "Create Claim Order",
                "description": "Create Claim Order by providing valid Claim Order details",
                "operationId": "createClaimOrderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "claimOrder",
                        "description": "Claim Order details to create a new Claim Order",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClaimOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/claim-orders/{claimOrderId}": {
            "get": {
                "tags": [
                    "Claim Order"
                ],
                "summary": "Get Claim Order",
                "description": "Get Claim Order by providing a valid Claim Order Id",
                "operationId": "getClaimOrderUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "claimOrderId",
                        "in": "path",
                        "description": "Claim Order Id to get the corresponding Claim Order",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ClaimOrder"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Claim Order"
                ],
                "summary": "Perform Claim Order action",
                "description": "Perform Claim Order Action by proving a valid Claim Order ID. Supported actions are 'UPDATE', 'EDIT', 'GENERATE_CREDIT_NOTE'.",
                "operationId": "performClaimOrderActionUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action Code",
                        "required": true,
                        "type": "string",
                        "default": "UPDATE",
                        "allowEmptyValue": false,
                        "enum": [
                            "EDIT",
                            "UPDATE",
                            "GENERATE_CREDIT_NOTE"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "claimOrder",
                        "description": "Modified Claim Order details corresponding to the given Claim Order Id",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ClaimOrder"
                        }
                    },
                    {
                        "name": "claimOrderId",
                        "in": "path",
                        "description": "Claim Order Id to update the corresponding Claim Order",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/commercial-contracts": {
            "get": {
                "tags": [
                    "Commercial Contracts"
                ],
                "summary": "Get all Commercial Contracts",
                "description": "Get all Commercial Contracts",
                "operationId": "getCommercialContractsUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommercialContract"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/contact-types": {
            "get": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Get Contact Types",
                "description": "Get available Contact Types from the system",
                "operationId": "getAllContactTypesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/countries": {
            "get": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Get Countries",
                "description": "Get available Countries from the system",
                "operationId": "getCountriesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Country"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/customer-credit-info": {
            "get": {
                "tags": [
                    "Customer Credit"
                ],
                "summary": "Get Customer Credit Information",
                "description": "Get Customer Credit Information for the given External Customer Id",
                "operationId": "getCustomerCreditInfoUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalCustomerId",
                        "in": "query",
                        "description": "External Customer Id to get Credit details of Customer",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerCreditDto"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/frequency": {
            "get": {
                "tags": [
                    "Supplier Schedule Frequency"
                ],
                "summary": "Get Supplier Schedule Frequency Information",
                "description": "Get all frequency information",
                "operationId": "getFrequencyInformationUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Frequency"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/global-settings": {
            "get": {
                "tags": [
                    "Global Settings"
                ],
                "summary": "Get Global Settings",
                "description": "Get global settings for the application",
                "operationId": "getGlobalSettingsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "query",
                        "description": "Name of the Attribute",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GlobalSettings"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Global Settings"
                ],
                "summary": "Update Global Settings",
                "description": "Update global settings by attribute",
                "operationId": "updateGlobalSettingsUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "query",
                        "description": "Name of the Attribute to be updated",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "in": "body",
                        "name": "globalSetting",
                        "description": "Global Settings details to be updated (Only Value can be updated)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GlobalSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GlobalSettingsApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/incoterms": {
            "get": {
                "tags": [
                    "Incoterms"
                ],
                "summary": "Get Incoterms",
                "description": "Get all Incoterms",
                "operationId": "getIncotermsUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Incoterm"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/invoices/{invoiceId}": {
            "patch": {
                "tags": [
                    "Sales Invoice"
                ],
                "summary": "Perform Invoice action",
                "description": "Perform one of the supported actions by proving a valid Invoice ID. Only supported action is 'REVERT'.",
                "operationId": "performInvoiceActionUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action Code",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "enum": [
                            "REVERT",
                            "UNBLOCK",
                            "DELETE",
                            "ACCEPT_CREDIT_NOTE"
                        ]
                    },
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice Id to perform the specified action",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/ledger-records": {
            "get": {
                "tags": [
                    "Ledger Records"
                ],
                "summary": "Get Ledgers",
                "description": "Get Ledgers by participantAccountId and isoCurrency",
                "operationId": "getLedgerRecordsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "isoCurrency",
                        "in": "query",
                        "description": "Iso Currency to get the corresponding Ledger Records (Optional)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "participantAccountId",
                        "in": "query",
                        "description": "Participant Account Id (Warehouse Id) to get the corresponding Ledger Records (Mandatory)",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Purchase Order Id to get the corresponding Ledger Records (Optional)",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "transactionFromDate",
                        "in": "query",
                        "description": "Transaction From date to get the corresponding Ledger Records",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "transactionToDate",
                        "in": "query",
                        "description": "Transaction To date to get the corresponding Ledger Records",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LedgerDTO"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/load-carrier-types": {
            "get": {
                "tags": [
                    "Load Carrier Types"
                ],
                "summary": "Get all Load Carrier Types",
                "description": "Get all Load Carrier Types",
                "operationId": "getLoadCarrierTypesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LoadCarrierType"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/location-types": {
            "get": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Get Location Types",
                "description": "Get available Location Types from the system",
                "operationId": "getAllLocationTypesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/order-lines": {
            "patch": {
                "tags": [
                    "Order"
                ],
                "summary": "Get Order Lines",
                "description": "Get Order Lines relevant to provided Order Line Ids list(List of Order Line Ids should be included in request body)",
                "operationId": "getOrderLinesUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action should be equal to 'QUERY'",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false,
                        "enum": [
                            "QUERY",
                            "CREATE",
                            "BULK_QUERY",
                            "UPDATE"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "orderLinesRequestDto",
                        "description": "Requested Order Line Ids object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderLinesRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderLine"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/participant-account-temp-outages": {
            "get": {
                "tags": [
                    "ParticipantAccountTempOutage"
                ],
                "summary": "Get Participant Account Temporary Outages",
                "description": "Get Participant Account Temporary Outages by providing valid Participant Account Id or valid External Participant Account Id",
                "operationId": "getParticipantAccTempOutageUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalParticipantAccountId",
                        "in": "query",
                        "description": "External Participant Account Id to retrieve the corresponding Participant Account Temporary Outages",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "participantAccountId",
                        "in": "query",
                        "description": "Participant Account Id to retrieve the corresponding Participant Account Temporary Outages",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "participantAccountRole",
                        "in": "query",
                        "description": "Participant Account Role to get the corresponding Participant Account Temporary Outages, this will be set to CUSTOMER when it's not provided",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false,
                        "enum": [
                            "CUSTOMER",
                            "WAREHOUSE",
                            "SUPPLIER",
                            "CUSTOMS"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParticipantAccountTempOutage"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "ParticipantAccountTempOutage"
                ],
                "summary": "Create Participant Account Temporary Outages",
                "description": "Create Participant Account Temporary Outages by providing valid temporary outage details",
                "operationId": "createParticipantAccTempOutageUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "tempOutage",
                        "description": "Temporal outage detail to create Participant Account Temporary Outages",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParticipantAccountTempOutage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/participant-account-temp-outages/{participantAccountOutageId}": {
            "delete": {
                "tags": [
                    "ParticipantAccountTempOutage"
                ],
                "summary": "Delete Participant Account Temporary Outages",
                "description": "Delete the existing Participant Account Temporary Outages by providing valid Participant Account Temporary Outages Id",
                "operationId": "deleteParticipantAccTempOutageUsingDELETE",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "participantAccountOutageId",
                        "in": "path",
                        "description": "Participant Account Temporary Outages Id to perform temporary outages deletion",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "ParticipantAccountTempOutage"
                ],
                "summary": "Update Participant Account Temporary Outages",
                "description": "Update the existing Participant Account Temporary Outages by providing valid close from, close to or reason",
                "operationId": "updateParticipantAccTempOutageUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "participantAccountOutageId",
                        "in": "path",
                        "description": "Participant Account Temporary Outages Id to perform temporary outages update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "tempOutage",
                        "description": "Modified Participant Account Temporary Outages",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ParticipantAccountTempOutage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/participant-accounts": {
            "get": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Get Participant Accounts",
                "description": "Get multiple Participant Accounts by providing at least Role, Participant Id No, Participant External Id, Participant Account External Id. Nested Properties will not be fetched when eager fetch is false.",
                "operationId": "getParticipantAccountsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "eagerFetch",
                        "in": "query",
                        "description": "If false, retrieves only the first level entity. Otherwise response will contain nested entities as well.",
                        "required": false,
                        "type": "boolean",
                        "default": true,
                        "allowEmptyValue": false
                    },
                    {
                        "name": "participantAccExternalId",
                        "in": "query",
                        "description": "Participant Account External Id to get the corresponding Participant Accounts",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "participantExternalId",
                        "in": "query",
                        "description": "Participant External Id No to get the corresponding Participant Accounts",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "participantId",
                        "in": "query",
                        "description": "Participant Id to get the corresponding Participant Accounts",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "queryFields",
                        "in": "query",
                        "description": "Query Fields for Lazily search participant accounts",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "queryText",
                        "in": "query",
                        "description": "Query text for Lazily search participant accounts",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Role Id to get the corresponding Participant Accounts",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "CUSTOMER",
                        "enum": [
                            "CUSTOMER",
                            "WAREHOUSE",
                            "SUPPLIER",
                            "CUSTOMS"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParticipantAccount"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Create Participant Account",
                "description": "Create Participant Account by providing valid Participant Account details",
                "operationId": "createParticipantAccountUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "participantAccount",
                        "description": "Participant Account details to create a new Participant Account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParticipantAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/participant-accounts/bulk": {
            "patch": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Get Participant Accounts by Providing a bulk criteria",
                "description": "Query for multiple participant account by providing bulk inputs(ex. a list of participant account ids or a list of participant account external ids)",
                "operationId": "getParticipantAccountsByBulkFilterCriteriaUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "participantAccountFilterBulkCriteria",
                        "description": "Filter Params",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ParticipantAccountFilterBulkCriteria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParticipantAccount"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/participant-accounts/{participantAccountId}": {
            "get": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Get Participant Account",
                "description": "Get particular Participant Account by providing a valid Participant Account Id",
                "operationId": "getParticipantAccountUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "participantAccountId",
                        "in": "path",
                        "description": "Participant Account Id to get the corresponding Participant Account",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 233
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ParticipantAccount"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Update Participant Account",
                "description": "Update Participant Account by providing valid Participant Account Id and Participant Account details to be updated",
                "operationId": "updateParticipantAccountUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "participantAccount",
                        "description": "Participant Account modified details to update an existing Participant Account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParticipantAccount"
                        }
                    },
                    {
                        "name": "participantAccountId",
                        "in": "path",
                        "description": "Participant Account Id to update an existing Participant Account",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 233
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/participants": {
            "get": {
                "tags": [
                    "Participant"
                ],
                "summary": "Get Participants",
                "description": "Get All Participants in the System",
                "operationId": "getParticipantsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "eagerFetch",
                        "in": "query",
                        "description": "If specified as true, response will contain nested entities.Otherwise response will contain only the first level entity.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "queryFields",
                        "in": "query",
                        "description": "Query Fields for Lazily search participant accounts",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "queryText",
                        "in": "query",
                        "description": "Query text for Lazily search participant accounts",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Participant"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Participant"
                ],
                "summary": "Create Participant",
                "description": "Create Participant by providing valid Participant details",
                "operationId": "createParticipantUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "participant",
                        "description": "Participant details to create a new Participant",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Participant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/participants/{participantId}": {
            "get": {
                "tags": [
                    "Participant"
                ],
                "summary": "Get Participant by ID",
                "description": "Get Participant using the participant ID",
                "operationId": "getParticipantByIdUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "participantId",
                        "in": "path",
                        "description": "Participant Id to get an existing Participant Account",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 233
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Participant"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Participant"
                ],
                "summary": "Update Participant",
                "description": "Update Participant by providing valid Participant Id and Participant details to be updated",
                "operationId": "updateParticipantUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "participant",
                        "description": "Participant modified details to update an existing Participant Account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Participant"
                        }
                    },
                    {
                        "name": "participantId",
                        "in": "path",
                        "description": "Participant Id to update an existing Participant Account",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 233
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/price-deviations": {
            "get": {
                "tags": [
                    "Price-Deviation"
                ],
                "summary": "Get Price Deviations",
                "description": "Get all price deviation cases",
                "operationId": "getPriceDeviationsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "DateFrom to get the corresponding Price Deviations",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "DateTo to get the corresponding Price Deviations",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PriceDeviation"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Price-Deviation"
                ],
                "summary": "Create Price Deviation",
                "description": "Create new price deviation record by providing valid details",
                "operationId": "createPriceDeviationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "priceDeviation",
                        "description": "Price deviation details to create new record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PriceDeviation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/price-deviations/unprocessed": {
            "get": {
                "tags": [
                    "Price-Deviation"
                ],
                "summary": "Get unprocessed Invoice Lines",
                "description": "Get all unprocessed invoice lines which has deviations",
                "operationId": "getUnprocessedInvoiceLinesUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Starting date (in yyyy-MM-dd format) of the Pick Date range to get respective Sales Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Ending date (in yyyy-MM-dd format) of the Pick Date range to get  respective Sales Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UnprocessedPurchaseInvoiceLine"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Price-Deviation"
                ],
                "summary": "Remove unprocessed Invoice Line",
                "description": "Remove unprocessed Invoice Line by Invoice Line Id",
                "operationId": "removeUnprocessedInvoiceLinesUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "unprocessedInvoiceLineIds",
                        "description": "Unprocessed Invoice Line Id list to remove from unprocessed state",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/price-deviations/{priceDeviationId}": {
            "get": {
                "tags": [
                    "Price-Deviation"
                ],
                "summary": "Get Price Deviation Record",
                "description": "Get Price Deviation by providing valid Deviation Id",
                "operationId": "getPriceDeviationByIdUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "priceDeviationId",
                        "in": "path",
                        "description": "Price Deviation Id to get the corresponding Price Deviation record",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PriceDeviation"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Price-Deviation"
                ],
                "summary": "Delete Price Deviation Lines",
                "description": "Delete Price Deviation Lines after validation",
                "operationId": "deletePriceDeviationLinesUsingDELETE",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "priceDeviationId",
                        "in": "path",
                        "description": "Price Deviation Id to get the corresponding Price Deviation record",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "priceDeviationLineIds",
                        "description": "Price deviation line ids to be deleted",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int64"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Price-Deviation"
                ],
                "summary": "Update Price Deviation",
                "description": "Update existing price deviation record by providing valid details",
                "operationId": "updatePriceDeviationUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "priceDeviation",
                        "description": "Price deviation details to update existing record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PriceDeviation"
                        }
                    },
                    {
                        "name": "priceDeviationId",
                        "in": "path",
                        "description": "Price Deviation Id to update record",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/prices": {
            "post": {
                "tags": [
                    "Price"
                ],
                "summary": "Create Prices",
                "description": "Create new price records by providing valid price details",
                "operationId": "createPriceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "price",
                        "description": "Price details to create new price record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PriceCreationRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "put": {
                "tags": [
                    "Price"
                ],
                "summary": "Create Prices Batch",
                "description": "Create Price batch records",
                "operationId": "createPricesBatchUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "priceCreationRequests",
                        "description": "Participant Price entity list to be persisted in the system",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PriceCreationRequestDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Price"
                ],
                "summary": "Get Prices",
                "description": "Get Price records relevant to provided criteria(filter criteria should be included in request body)",
                "operationId": "getPricesUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action should be equal to 'QUERY'",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false,
                        "enum": [
                            "QUERY",
                            "CREATE",
                            "CREATE_OR_UPDATE"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "participantPriceRequest",
                        "description": "Participant Price request data object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ParticipantPriceRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParticipantPrice"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/prices/{priceId}": {
            "patch": {
                "tags": [
                    "Price"
                ],
                "summary": "Update Prices",
                "description": "Update price records by providing valid price details",
                "operationId": "updatePriceUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "priceId",
                        "in": "path",
                        "description": "Price Id to update price record",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "priceUpdateRequestDto",
                        "description": "Price details to update price record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PriceUpdateRequestDto"
                        }
                    },
                    {
                        "name": "updateParticipantPrice",
                        "in": "query",
                        "description": "If updateParticipantPrice is true Participant Price will be updated",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/product-brand-codes": {
            "get": {
                "tags": [
                    "Product Brand Codes"
                ],
                "summary": "Get all Product Brand Codes",
                "description": "Get all Product Brand Codes",
                "operationId": "getAllProductBrandCodesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductBrand"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/product-calculation-data": {
            "get": {
                "tags": [
                    "Calculation Types"
                ],
                "summary": "Get Product Calculation Data",
                "description": "Gets Product Calculation Data by providing productId along with other optional parameters; calculationType and derivationNo",
                "operationId": "getProductCalculationDataUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "calculationType",
                        "in": "query",
                        "description": "Optional parameter to filter Product Calculation data based on their calculationType (Ex. CTCU, CTFR, CTFE, etc.)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "derivationNo",
                        "in": "query",
                        "description": "Optional parameter to filter Product Calculation data based on their derivationNo (Ex. 130, 130W, 210W, etc.)",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product Id to get its associated calculation data",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductCalculationData"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Calculation Types"
                ],
                "summary": "Create Product Calculation Data",
                "description": "Create new product calculation records by providing valid product calculation data",
                "operationId": "createProductCalculationDataUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "productCalculationData",
                        "description": "Calculation Data to create new Product Calculation Record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductCalculationData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Calculation Types"
                ],
                "summary": "Update Product Calculation Data",
                "description": "Update Product Calculation Data by providing valid Product Calculation Data to be updated",
                "operationId": "updateProductCalculationDataUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "productCalculationData",
                        "description": "Calculation Data to update existing Product Calculation Record",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProductCalculationData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/product-groups": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Product Groups",
                "description": "Get all Product Groups",
                "operationId": "getProductGroupsUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "MEASURABLE_GOODS",
                                    "PACKAGED_GOODS_PIECE",
                                    "WEIGHTED_PACKAGE"
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Products",
                "description": "Get filtered Products by providing either External Id, Supplier Id or Warehouse Id. If Orderable status is not specified both orderable and non-orderable Packagings will be fetched with the Product.",
                "operationId": "getProductsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "eagerFetch",
                        "in": "query",
                        "description": "If specified as false, retrieves only the first level entity. Otherwise response will contain nested entities as well.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalId",
                        "in": "query",
                        "description": "External Id to retrieve the corresponding Products",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of products to be returned in the response",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "orderable",
                        "in": "query",
                        "description": "Product Packaging Orderable Status(true or false) to retrieve the corresponding Products. If not specified will retrieve both orderable and non-orderable Packagings.",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "queryFields",
                        "in": "query",
                        "description": "A comma separated list of field names which are available in the Product entity. This can be used together with 'queryText' for searching products. Only a limited set of field names are allowed (i.e. externalId,internalId,suppliers.supplierProductId,packagings.gtin, productName)",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "queryText",
                        "in": "query",
                        "description": "A text value (not less than 3 characters) that is used to search products based on the fields mentioned in 'queryFields' parameter",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "If given, the associated products related to the Supplier will be retrieved",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "supplierParticipantId",
                        "in": "query",
                        "description": "If given, the associated products related to the Suppliers of the given Organization will be retrieved",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "warehouseId",
                        "in": "query",
                        "description": "If given, the associated products related to the Warehouse will be retrieved",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create Product",
                "description": "Create Product by providing valid Product details",
                "operationId": "createProductUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "product",
                        "description": "Product details to create a new Product",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Product"
                ],
                "summary": "Create or update Products",
                "description": "Create or update multiple Products by providing valid Product details",
                "operationId": "createOrUpdateProductsUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "products",
                        "description": "Product details to create or update Products",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/products/bulk": {
            "patch": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Products by Providing a bulk criteria",
                "description": "Query for multiple products by providing bulk inputs(ex. a list of External IDs/Product IDs)",
                "operationId": "getProductsByBulkCriteriaUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "productFilterBulkCriteria",
                        "description": "Filter Params",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductFilterBulkCriteria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/products/{productId}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Product",
                "description": "Get particular Product by providing a valid Product Id",
                "operationId": "getProductUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id to retrieve the corresponding Product",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Product"
                ],
                "summary": "Update Product",
                "description": "Update Product by providing valid Product Id and Product details to be updated",
                "operationId": "updateProductUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "product",
                        "description": "Modified Product details corresponding to the given Product Id",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Product Id to update an existing Product",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/projects": {
            "get": {
                "tags": [
                    "Retail Project"
                ],
                "summary": "Get Customer Projects",
                "description": "Retrieve all Customer Projects for given External Customer Id and Active flag",
                "operationId": "getCustomerProjectsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "description": "If true return active project records only, if false return inactive project records only",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalCustomerId",
                        "in": "query",
                        "description": "External Customer Id to get the corresponding Project records",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustomerProject"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-invoice-statuses": {
            "get": {
                "tags": [
                    "Purchase Invoice"
                ],
                "summary": "Get Purchase Invoice Statuses",
                "description": "Get All Purchase Invoice Statuses",
                "operationId": "getAllPurchaseInvoiceStatusesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "MATCHED",
                                    "UNMATCHED",
                                    "MATCHED_WITH_DEVIATION",
                                    "BLOCKED",
                                    "DELETED"
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-invoices": {
            "get": {
                "tags": [
                    "Purchase Invoice"
                ],
                "summary": "Get Purchase Invoices",
                "description": "Get Purchase Invoices by providing a filter criteria",
                "operationId": "getPurchaseInvoicesUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "creditNote",
                        "in": "query",
                        "description": "If set to true returns invoices with a creditNoteNumber (Credit Invoices). If false, returns Non-Credit invoices. If param is null returns both Credit and Non-Credit invoices",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From Date of the Invoice Date Range to get Purchase Invoices",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To Date of the Invoice Date Range to get Purchase Invoices",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "invoiceNumber",
                        "in": "query",
                        "description": "Invoice Number to retrieve Purchase Invoices",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Purchase Order Id to retrieve Purchase Invoices",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Supplier Id to retrieve Purchase Invoices",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseInvoice"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Purchase Invoice"
                ],
                "summary": "Create Purchase Invoice and Invoice Lines",
                "description": "Create Purchase Invoice and Invoice Lines by providing Purchase Invoice Data",
                "operationId": "createPurchaseInvoiceUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "purchaseInvoice",
                        "description": "Purchase Invoice and Purchase Invoice Line data to create a new Purchase Invoice",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Purchase Invoice"
                ],
                "summary": "Create a Purchase Credit Note",
                "description": "Create a Purchase Credit Note with valid Invoice data provided",
                "operationId": "revertPurchaseInvoiceUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action Code",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false,
                        "enum": [
                            "REVERT",
                            "UNBLOCK",
                            "DELETE",
                            "ACCEPT_CREDIT_NOTE"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "purchaseCreditNote",
                        "description": "Purchase Credit Note details to create a new Purchase Credit Note",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseInvoice"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-invoices/{invoiceId}": {
            "get": {
                "tags": [
                    "Purchase Invoice"
                ],
                "summary": "Get Purchase Invoice",
                "description": "Get Purchase Invoice by providing a valid Invoice Id",
                "operationId": "getPurchaseInvoiceUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice Id to retrieve the corresponding Purchase Invoice",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PurchaseInvoice"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Purchase Invoice"
                ],
                "summary": "Purchase Invoice Action API",
                "description": "Perform Purchase Invoice Actions",
                "operationId": "updatePurchaseInvoiceUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action Code, allowed actions [UNBLOCK, DELETE]",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false,
                        "enum": [
                            "REVERT",
                            "UNBLOCK",
                            "DELETE",
                            "ACCEPT_CREDIT_NOTE"
                        ]
                    },
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Purchase Invoice Id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-order-lines": {
            "get": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Get Purchase Order Lines",
                "description": "Get Purchase Order Lines by providing valid Order Status Id, Delivery From or Delivery To",
                "operationId": "getPurchaseOrderLinesUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "deliveryFrom",
                        "in": "query",
                        "description": "Delivery From date to get the corresponding Purchase Orders Lines",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "deliveryTo",
                        "in": "query",
                        "description": "Delivery To date to get the corresponding Purchase Orders Lines",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "eagerFetch",
                        "in": "query",
                        "description": "This can be set to true if extra nested objects like packaging need to be returned in the response. The default value is false",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalBookingId",
                        "in": "query",
                        "description": "External Booking Id to get the corresponding Purchase Order Lines",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "orderStatusIds",
                        "in": "query",
                        "description": "Order Status Id List to get the corresponding Purchase Orders Lines",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "originalOrderLineReference",
                        "in": "query",
                        "description": "Original order line reference to get the corresponding Purchase Order Lines",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product Id to get the corresponding Purchase Order Lines",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "updatedDeliveryFrom",
                        "in": "query",
                        "description": "Updated Delivery From date to get the corresponding Purchase Order Lines",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "updatedDeliveryTo",
                        "in": "query",
                        "description": "Updated Delivery To date to get the corresponding Purchase Order Lines",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "warehouseId",
                        "in": "query",
                        "description": "Warehouse Id to get the corresponding Purchase Order Lines",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrderLine"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Perform Purchase Order Line Action",
                "description": "Perform Purchase Order Action by providing valid Purchase Order Lines and Purchase Order Action",
                "operationId": "performPurchaseOrderLineActionUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Purchase Order Action to be performed on the given Purchase Order Lines",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false,
                        "enum": [
                            "INFORM_SUPPLIER",
                            "PURCHASE_CONFIRM",
                            "GOODS_SHIPPED",
                            "GOODS_RECEIVED",
                            "CANCEL"
                        ]
                    },
                    {
                        "name": "external",
                        "in": "query",
                        "description": "External party using external identifiers",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "in": "body",
                        "name": "purchaseOrderLines",
                        "description": "Purchase Order Line list to perform the corresponding action",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrderLine"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-order-statuses": {
            "get": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Get All Purchase Order Statuses",
                "operationId": "getAllPurchaseStatusesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderStatus"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-orders": {
            "get": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Get Purchase Orders",
                "description": "Get Purchase Orders by providing valid Order Status Id, Delivery From, Delivery To, Updated Delivery From, Updated Delivery To or Supplier Id or Original Order Reference",
                "operationId": "getPurchaseOrdersUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Customer Id to get the corresponding Purchase Orders",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "deliveryFrom",
                        "in": "query",
                        "description": "Delivery From date to get the corresponding Purchase Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "deliveryTo",
                        "in": "query",
                        "description": "Delivery To date to get the corresponding Purchase Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "orderStatusId",
                        "in": "query",
                        "description": "Order Status Id to get the corresponding Purchase Orders",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "originalOrderReference",
                        "in": "query",
                        "description": "Original Order Reference to get respective Purchase Orders",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Supplier Id to get the corresponding Purchase Orders",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "updatedDeliveryFrom",
                        "in": "query",
                        "description": "Updated Delivery From date to get the corresponding Purchase Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "updatedDeliveryTo",
                        "in": "query",
                        "description": "Updated Delivery To date to get the corresponding Purchase Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "warehouseId",
                        "in": "query",
                        "description": "Warehouse Id to get the corresponding Purchase Orders",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrder"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Create Purchase Order",
                "description": "Create Purchase Order by providing valid Purchase Order details",
                "operationId": "createPurchaseOrderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "purchaseOrder",
                        "description": "Purchase Order details to create a new Purchase Order",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-orders/{orderId}": {
            "get": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Get Purchase Order",
                "description": "Get Purchase Order by providing valid Order Id",
                "operationId": "getPurchaseOrderUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order Id to get the corresponding Purchase Order",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Update Purchase Order",
                "description": "Update existing Purchase Order's Customs Reference, Updated Delivery Date or Comment",
                "operationId": "updateOrderUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Purchase Order Action to be performed on the given Purchase Orders",
                        "required": false,
                        "type": "string",
                        "default": "UPDATE",
                        "allowEmptyValue": false,
                        "enum": [
                            "ORDER_RECEIVED",
                            "UPDATE"
                        ]
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order Id to perform order update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "purchaseOrder",
                        "description": "Modified purchase order",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-orders/{orderId}/documents": {
            "post": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Add Purchase Order Document",
                "description": "Add Purchase Order Document to an existing Purchase Order",
                "operationId": "addDocumentUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "document",
                        "in": "query",
                        "required": false,
                        "type": "file"
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Purchase Order Id to attach the uploaded document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-orders/{orderId}/documents/{documentId}": {
            "get": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Get Purchase Order Document",
                "description": "Get Purchase Order Document attached to an existing Purchase Order",
                "operationId": "getDocumentUsingGET",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "autoDownloadable",
                        "in": "query",
                        "description": "Indicate if the browser should download the file automatically or try to open inline",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "Document Id to get the corresponding File",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Purchase Order Id related to the document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Delete Purchase Order Document",
                "description": "Delete document attached to an existing Purchase Order",
                "operationId": "deleteDocumentUsingDELETE",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "Document Id to delete the corresponding Purchase Order document",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Purchase Order Id related to the document",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/purchase-orders/{orderId}/order-lines": {
            "patch": {
                "tags": [
                    "Purchase Order"
                ],
                "summary": "Add or Update Purchase Order Lines",
                "description": "Add multiple Order Lines to an existing Purchase Order or Update existing Purchase Order Lines' Updated Quantity",
                "operationId": "addOrUpdateOrderLinesUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order Id to perform order line update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "purchaseOrderLines",
                        "description": "Valid collection of Purchase Order Lines to add or update",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrderLine"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/regions": {
            "get": {
                "tags": [
                    "Participant Account"
                ],
                "summary": "Get Regions",
                "description": "Get available Regions from the system",
                "operationId": "getRegionsUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Region"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/retail-carts": {
            "patch": {
                "tags": [
                    "Retail Cart"
                ],
                "summary": "Get retail cart prices",
                "description": "Get retail cart prices relevant to provided External Customer Id, External Project Id, External Product Ids and the respective quantities",
                "operationId": "getRetailPricesUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "cartRequestDto",
                        "description": "Retail Cart request data object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CommerceIntegrationCartRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CommerceIntegrationCartResponseDto"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sales-invoice-statuses": {
            "get": {
                "tags": [
                    "Sales Invoice"
                ],
                "summary": "Get Sales Invoice Statuses",
                "description": "Get All Sales Invoice Statuses",
                "operationId": "getAllSalesInvoiceStatusesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "REGISTERED",
                                    "SETTLED",
                                    "CANCELED",
                                    "DELETED"
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sales-invoices": {
            "get": {
                "tags": [
                    "Sales Invoice"
                ],
                "summary": "Get Sales Invoices",
                "description": "Get Sales Invoices by providing a filter criteria",
                "operationId": "getSalesInvoicesUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "creditNoteNo",
                        "in": "query",
                        "description": "Credit Note Number of corresponding Credit Notes",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "DateFrom to get the corresponding Sales Invoices",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "DateTo to get the corresponding Sales Invoices",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "eagerFetch",
                        "in": "query",
                        "description": "If TRUE additional information such as Invoice Lines and Packagings will be retrieved",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "invoiceNumber",
                        "in": "query",
                        "description": "Invoice Number to retrieve respective invoice and reverted invoice details",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "orderId",
                        "in": "query",
                        "description": "Sales Order ID to retrieve the respective Sales Invoices",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "receivingCustomerId",
                        "in": "query",
                        "description": "Receiving Customer Id to retrieve respective invoice and reverted invoice details",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SalesInvoice"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sales-invoices/{invoiceId}": {
            "get": {
                "tags": [
                    "Sales Invoice"
                ],
                "summary": "Get Sales Invoice",
                "description": "Get Sales Invoice by its Invoice ID",
                "operationId": "getSalesInvoiceByInvoiceIdUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice Id to retrieve respective invoice details",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SalesInvoice"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sales-order-lines": {
            "get": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Get Sales Order Lines",
                "description": "Get multiple Sales Order Lines by providing the status ID, Product ID, Pick Date Range, Shipment Load Carrier ID or Shipment Batch No",
                "operationId": "getSalesOrderLinesUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "eagerFetch",
                        "in": "query",
                        "description": "This can be set to true if extra nested objects like packaging need to be returned in the response. The default value is false",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalBookingId",
                        "in": "query",
                        "description": "External Booking Id to get the corresponding Sales Order Lines",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "orderLineStatusIds",
                        "in": "query",
                        "description": "Sales Order Line Status Ids to get respective Sales Order Lines",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "collectionFormat": "multi",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "originalOrderLineReference",
                        "in": "query",
                        "description": "Original Order Line Reference to get Sales Order Lines",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "pickFrom",
                        "in": "query",
                        "description": "Starting date (in yyyy-MM-dd format) of the Pick Date range to get respective Sales Order Lines",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "pickTo",
                        "in": "query",
                        "description": "Ending date (in yyyy-MM-dd format) of the Pick Date range to get respective Sales Order Lines",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product Id to get Sales Order Lines",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "shipmentBatchNo",
                        "in": "query",
                        "description": "Shipment Batch number to get Sales Order Lines",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "shipmentLoadCarrierId",
                        "in": "query",
                        "description": "Shipment Load Carrier ID to get Sales Order Lines",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "warehouseId",
                        "in": "query",
                        "description": "Warehouse Id to get the corresponding Sales Order Lines",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SalesOrderLine"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Perform Sales Order Lines action",
                "description": "Perform one of the supported actions upon a given list of valid Order Lines. Supported actions are 'PICK_INITIATE', 'PICK_CONFIRM', 'GENERATE_INVOICE', 'REVERT_INVOICE' and 'CANCEL'.",
                "operationId": "performSalesOrderLineActionUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action Code",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false,
                        "enum": [
                            "PICK_INITIATE",
                            "PICK_CONFIRM",
                            "MARK_FOR_INVOICING",
                            "GENERATE_INVOICE",
                            "CANCEL",
                            "REVERT_INVOICE"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "salesOrderLines",
                        "description": "Collection of valid Sales Order Lines to perform the specified action",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SalesOrderLine"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sales-order-statuses": {
            "get": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Get Sales Order Statuses",
                "description": "Get all Sales Order Statuses",
                "operationId": "getAllSalesStatusesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderStatus"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sales-orders": {
            "get": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Get Sales Orders",
                "description": "Get multiple Sales Orders by providing the status ID or the Pick Date range",
                "operationId": "getSalesOrdersUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Customer Id to get respective Sales Orders",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "externalMessageId",
                        "in": "query",
                        "description": "External Message Id to get respective Sales Orders",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "orderStatusId",
                        "in": "query",
                        "description": "Sales Order Status Id to get respective Sales Orders",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "originalOrderReference",
                        "in": "query",
                        "description": "Original Order Reference to get respective Sales Orders",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "pickFrom",
                        "in": "query",
                        "description": "Starting date (in yyyy-MM-dd format) of the Pick Date range to get respective Sales Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "pickTo",
                        "in": "query",
                        "description": "Ending date (in yyyy-MM-dd format) of the Pick Date range to get  respective Sales Orders",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "warehouseId",
                        "in": "query",
                        "description": "Warehouse Id to get respective Sales Orders",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SalesOrder"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Create Sales Order",
                "description": "Create a Sales Order by providing valid Sales Order and Order Line details",
                "operationId": "createSalesOrderUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "order",
                        "description": "Sales Order details to create a new Sales Order",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SalesOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sales-orders/{orderId}": {
            "get": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Get Sales Order",
                "description": "Get single Sales Order by providing its Order ID",
                "operationId": "getSalesOrderUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Sales Order Id to get respective Order details",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SalesOrder"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Update Sales Order",
                "description": "Update existing Sales Order's Comment",
                "operationId": "updateOrderUsingPATCH_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order Id to perform order update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "salesOrder",
                        "description": "Modified sales order",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SalesOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sales-orders/{orderId}/order-lines": {
            "patch": {
                "tags": [
                    "Sales Order"
                ],
                "summary": "Add or Update Order Lines",
                "description": "Add new sales order lines or Update existing sales order lines' ordered quantity, packaging type and price",
                "operationId": "addOrUpdateOrderLinesUsingPATCH_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order Id to perform order line update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "orderLines",
                        "description": "Valid collection of Sales Order Lines to add or update",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SalesOrderLine"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/shipment-note-purchase-data": {
            "get": {
                "tags": [
                    "Purchase Shipment Note Data"
                ],
                "summary": "Get Purchase Shipment Note Data",
                "description": "Get Purchase Shipment Note data filtered by order id or load carrier id(sscc) along with order status",
                "operationId": "getPurchaseShipmentNoteDataUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "loadCarrierId",
                        "in": "query",
                        "description": "SSCC number of the pallet or the parent pallet in which shipment note data is needed",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Order ID to filter the purchase shipment note data, Can be provided only instead of loadCarrierId",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "statusId",
                        "in": "query",
                        "description": "Status of the order contains the given sscc which can only be provided with loadCarrierId, If not provided will be defaulted to GOODS SHIPPED",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrderLineShipmentNoteData"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Purchase Shipment Note Data"
                ],
                "summary": "Create Shipment Note Purchase Data",
                "description": "Create shipment note purchase data for a single order",
                "operationId": "createShipmentNoteDataUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "shipmentNoteDataList",
                        "description": "List of Shipment Note Purchase Data to create Shipment Note",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrderLineShipmentNoteData"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/shipment-note-sales-data": {
            "get": {
                "tags": [
                    "Sales Shipment Note Data"
                ],
                "summary": "Get Shipment Note Data",
                "description": "Get Shipment Note data by Sales Order ID, Original Order Ref or Sales Order Line ID",
                "operationId": "getShipmentNoteDataUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "originalOrderRef",
                        "in": "query",
                        "description": "Original Order Reference to get corresponding Shipment Note Sales Data",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "salesOrderId",
                        "in": "query",
                        "description": "Sales Order ID to get corresponding Shipment Note Sales Data",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "salesOrderLineId",
                        "in": "query",
                        "description": "Sales Order Line ID to get corresponding Shipment Note Sales Data",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SalesOrderLineShipmentNoteData"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Sales Shipment Note Data"
                ],
                "summary": "Create Shipment Note Sales Data",
                "description": "Create shipment note sales data for a single order",
                "operationId": "createShipmentNoteDataUsingPATCH_1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "shipmentNoteDataList",
                        "description": "List of Shipment Note Sales Data to create Shipment Note",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SalesOrderLineShipmentNoteData"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/stock-reason-codes": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Get Stock Reason Codes",
                "description": "Get all Stock Reason Codes",
                "operationId": "getStockReasonCodesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "EXPIRATION",
                                    "BREAKAGE",
                                    "ADJUSTMENTS",
                                    "INITIAL_STOCK",
                                    "MARK_FOR_INVOICING",
                                    "REVERT_ON_CANCELLATION",
                                    "GOODS_RECEPTION",
                                    "ADJUSTMENTS_FROM_CASH_REGISTER",
                                    "OTHER_REASON"
                                ]
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/stock-reservation-config": {
            "get": {
                "tags": [
                    "Stock Reservation Config"
                ],
                "summary": "Get Stock Reservation Config By Structure Set Id",
                "description": "Retrieving All Stock Reservation Configs or retrieving Stock Reservation Configs related to a given Structure Set Id",
                "operationId": "getStockReservationConfigsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product ID to get the corresponding Stock Reservation Config records",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "structureSetId",
                        "in": "query",
                        "description": "Structure Set ID to get the corresponding Stock Reservation Config records",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Stock Reservation Config"
                ],
                "summary": "Create Stock Reservation Config",
                "description": "Create a Stock Reservation Config by providing valid Stock Reservation Config details",
                "operationId": "createStockReservationConfigUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stockReservationConfig",
                        "description": "Required No Of Days to Stock Reservation Config",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StockReservationConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/stock-reservation-config/{stockReservationConfigId}": {
            "get": {
                "tags": [
                    "Stock Reservation Config"
                ],
                "summary": "Get Stock Reservation Config by Stock Reservation Config Id",
                "description": "Get Stock Reservation Config record corresponds to the given Stock Reservation Config id",
                "operationId": "getStockReservationConfigByIdUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "stockReservationConfigId",
                        "in": "path",
                        "description": "Stock Reservation Config Id to get the corresponding Stock Reservation Config record",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Stock Reservation Config"
                ],
                "summary": "Delete Stock Reservation Config by Stock Reservation Config Id",
                "description": "Deletes Stock Reservation Config and related Structure Set corresponding to the given Stock Reservation Config Id",
                "operationId": "deleteStockReservationConfigByIdUsingDELETE",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "stockReservationConfigId",
                        "in": "path",
                        "description": "Stock Reservation Config Id of the record to be deleted",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Stock Reservation Config"
                ],
                "summary": "Update Stock Reservation Config",
                "description": "Update a Stock Reservation Config data by providing Stock Reservation Config Id and Stock Reservation Config details to be updated",
                "operationId": "updateStockReservationConfigUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "stockReservationConfig",
                        "description": "Stock Reservation Config information to create Stock Reservation Config",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StockReservationConfig"
                        }
                    },
                    {
                        "name": "stockReservationConfigId",
                        "in": "path",
                        "description": "Stock Reservation Config Id to update Stock Reservation Config",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/stockout-codes": {
            "get": {
                "tags": [
                    "Get Stockout Codes"
                ],
                "summary": "Get Stockout Codes",
                "description": "Get available Stockout Codes from the system",
                "operationId": "getStockOutCodesUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StockOutCode"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/stocks": {
            "get": {
                "tags": [
                    "Stock"
                ],
                "summary": "Get Actual Stocks",
                "description": "Get Actual Stocks by providing either a valid Product Id, Participant Account Id, Structure Set ID or Service Date",
                "operationId": "getStockRecordsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "DateFrom to get the corresponding Stock Records within a date range. Date Format : yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "DateTo to get the corresponding Stock Records within a date range. Date Format : yyyy-MM-dd",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "participantAccountId",
                        "in": "query",
                        "description": "Participant Account Id to get the corresponding Stock Records",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product Id to get the corresponding Stock Records",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "structureSetId",
                        "in": "query",
                        "description": "Structure Set ID to get the corresponding Stock Records for Products bound by the given Structure Set ID",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Stock"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Stock"
                ],
                "summary": "Create initial Stock Record",
                "description": "Create initial Stock Record by providing a valid Product Id, Participant Account Id, Packaging Type and Stock details",
                "operationId": "createInitialStockUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "initialStock",
                        "description": "initialStock",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StockCreationRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Stock"
                ],
                "summary": "Update Stock Records",
                "description": "Update Stock Records by providing a valid Packaging Structure Id, Participant Account Id and stock details",
                "operationId": "updateStockUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action should be equal to 'BULK_QUERY' or 'UPDATE'",
                        "required": false,
                        "type": "string",
                        "default": "UPDATE",
                        "allowEmptyValue": false,
                        "enum": [
                            "QUERY",
                            "CREATE",
                            "BULK_QUERY",
                            "UPDATE"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "newStock",
                        "description": "Stock data to update an existing Stock Record",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StockUpdateRequestDto"
                        }
                    },
                    {
                        "name": "packagingTypeCode",
                        "in": "query",
                        "description": "Packaging Type Code to update the corresponding Stock Record.If not specified, defaulted to FPAK",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product Id to update the corresponding Stock Records",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/structure-group-sets": {
            "get": {
                "tags": [
                    "Packaging Structure"
                ],
                "summary": "Get multiple Structure Group Sets",
                "description": "Get multiple Structure Group Sets relevant to provided External Id",
                "operationId": "getStructureGroupSetsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalId",
                        "in": "query",
                        "description": "External Id to get the corresponding Structure Group Sets",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructureGroupSet"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Packaging Structure"
                ],
                "summary": "Create Structure Group Set",
                "description": "Create new Structure Group Set by providing Structure Group Set details",
                "operationId": "createStructureGroupSetUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "structureGroupSet",
                        "description": "Structure Group Set details to create a new Structure Group Set",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StructureGroupSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/structure-group-sets/{structureGroupSetId}": {
            "get": {
                "tags": [
                    "Packaging Structure"
                ],
                "summary": "Get a single Structure Group Set",
                "description": "Get a single Structure Group Set relevant to provided Structure Group Set Id",
                "operationId": "getStructureGroupSetUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "structureGroupSetId",
                        "in": "path",
                        "description": "Structure Group Set Id to get the corresponding Structure Group Set",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructureGroupSet"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/structure-sets": {
            "get": {
                "tags": [
                    "Packaging Structure"
                ],
                "summary": "Get multiple Structure Sets",
                "description": "Get multiple Structure Sets relevant to provided External Id",
                "operationId": "getStructureSetsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "externalId",
                        "in": "query",
                        "description": "External Id to get the corresponding Structure Sets",
                        "required": false,
                        "type": "string",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "productId",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StructureSet"
                            }
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Packaging Structure"
                ],
                "summary": "Create Structure Set",
                "description": "Create new Structure Set by providing Structure Set details",
                "operationId": "createStructureSetUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "structureSet",
                        "description": "Structure Set details to create a new Structure Set",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StructureSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/structure-sets/{structureSetId}": {
            "get": {
                "tags": [
                    "Packaging Structure"
                ],
                "summary": "Get a single Structure Set",
                "description": "Get a single Structure Set relevant to provided Structure Set Id",
                "operationId": "getStructureSetUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "structureSetId",
                        "in": "path",
                        "description": "Structure Set Id to get the corresponding Structure Set",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StructureSet"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Packaging Structure"
                ],
                "summary": "Update Structure Set",
                "description": "Update existing Structure Set by providing new Structure Set details",
                "operationId": "updateStructureSetUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "structureSet",
                        "description": "Structure Set modified details to update an existing Structure Set",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StructureSet"
                        }
                    },
                    {
                        "name": "structureSetId",
                        "in": "path",
                        "description": "Structure Set Id to update an existing Structure Set",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/supplier-schedules": {
            "post": {
                "tags": [
                    "Supplier Schedule"
                ],
                "summary": "Create Supplier Schedule",
                "description": "Create Supplier Schedule by providing valid Supplier Schedule details",
                "operationId": "createSupplierScheduleUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "supplierScheduleDto",
                        "description": "Supplier Schedule details to create a new Supplier Schedule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SupplierScheduleRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/supplier-schedules/bulk": {
            "patch": {
                "tags": [
                    "Supplier Schedule"
                ],
                "summary": "Get Supplier Schedules in bulk",
                "description": "Query for multiple Supplier Schedules by providing valid bulk inputs (eg: Supplier Account IDs, Supplier External IDs, Product IDs or Product External IDs)",
                "operationId": "getSupplierSchedulesByFilterCriteriaUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "supplierScheduleFilterBulkCriteria",
                        "description": "Bulk Filter parameters",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SupplierScheduleFilterBulkCriteria"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupplierScheduleResponseDto"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/supplier-schedules/{supplierScheduleId}": {
            "get": {
                "tags": [
                    "Supplier Schedule"
                ],
                "summary": "Get Supplier Schedule",
                "description": "Get Supplier Schedule by providing a valid SupplierSchedule Id",
                "operationId": "getSupplierScheduleByIdUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "supplierScheduleId",
                        "in": "path",
                        "description": "Supplier Schedule Id to retrieve the corresponding Supplier Schedule",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SupplierScheduleResponseDto"
                        }
                    }
                },
                "deprecated": false
            },
            "delete": {
                "tags": [
                    "Supplier Schedule"
                ],
                "summary": "Delete Supplier Schedule",
                "description": "Delete Supplier Schedule by provided valid Supplier Schedule Id",
                "operationId": "deleteSupplierScheduleUsingDELETE",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "supplierScheduleId",
                        "in": "path",
                        "description": "Supplier Schedule Id to delete the corresponding Supplier Schedule",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/MdmApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sync-failures/participant-accounts": {
            "get": {
                "tags": [
                    "Sync Failure"
                ],
                "summary": "Get Participant Account Sync Failures",
                "description": "Get Participant Account sync failures from the system",
                "operationId": "getParticipantAccountSyncFailuresByRoleUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Role of the Participant Accounts to filter Sync Failures",
                        "required": true,
                        "type": "string",
                        "allowEmptyValue": false,
                        "x-example": "SUPPLIER",
                        "enum": [
                            "CUSTOMER",
                            "WAREHOUSE",
                            "SUPPLIER",
                            "CUSTOMS"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SyncFailureGetDto"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/sync-failures/products": {
            "get": {
                "tags": [
                    "Sync Failure"
                ],
                "summary": "Get Product Sync Failures",
                "description": "Get Product sync failures from the system",
                "operationId": "getProductSyncFailuresUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SyncFailureGetDto"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/tariff-quotas": {
            "get": {
                "tags": [
                    "Tariff Quota"
                ],
                "summary": "Get Tariff Quota By Structure Set Id, From Date, To Date or a combination of the three which are Applicable For today or Not Applicable For Today",
                "description": "Retrieving all Tariff Quota information related to a given Structure Set Id, From Date and To Date or a combination of the three which are Applicable For today or Not Applicable For Today",
                "operationId": "getTariffQuotasUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "applicableForToday",
                        "in": "query",
                        "description": "If specified true, retrieve Tariff Quota records applicable for today",
                        "required": false,
                        "type": "boolean",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From Date to get the corresponding Tariff Quota records",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "structureSetId",
                        "in": "query",
                        "description": "Structure Set ID to get the corresponding Tariff Quota records",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To Date to get the corresponding Tariff Quota records",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "Tariff Quota"
                ],
                "summary": "Create Tariff Quota",
                "description": "Create a Tariff Quota by providing valid tariff Quota details",
                "operationId": "createTariffQuotaUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "tariffQuota",
                        "description": "Tariff Quota information to create Tariff Quota",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TariffQuota"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/tariff-quotas/{tariffQuotaId}": {
            "get": {
                "tags": [
                    "Tariff Quota"
                ],
                "summary": "Get Tariff Quota by tariff quota Id",
                "description": "Get Tariff Quota record corresponds to the given tariffQuotaId",
                "operationId": "getTariffQuotaByTariffQuotaIdUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tariffQuotaId",
                        "in": "path",
                        "description": "Tariff Quota Id to get the corresponding Tariff Quota record",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseEntity"
                        }
                    }
                },
                "deprecated": false
            },
            "patch": {
                "tags": [
                    "Tariff Quota"
                ],
                "summary": "Update Tariff Quota",
                "description": "Update a Tariff Quota by providing Tariff Quota Id and Tariff Quota details to be updated",
                "operationId": "updateTariffQuotaUsingPATCH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "tariffQuota",
                        "description": "Tariff Quota information to create Tariff Quota",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TariffQuota"
                        }
                    },
                    {
                        "name": "tariffQuotaId",
                        "in": "path",
                        "description": "Tariff Quota Id to update Tariff Quota",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/transactions": {
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transactions",
                "description": "Get Transactions by providing either a valid Sales Order Id, Purchase Order Id, Ticket Number or Participant Account Id",
                "operationId": "getTransactionsUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Customer Id to get the corresponding Transactions",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "DateFrom to get the corresponding Transactions",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "DateTo to get the corresponding Transactions",
                        "required": false,
                        "type": "string",
                        "format": "date",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "includeAuxiliaryData",
                        "in": "query",
                        "description": "Indicate whether the transaction auxiliary data included in the response or not",
                        "required": false,
                        "type": "boolean",
                        "default": false,
                        "allowEmptyValue": false
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Product Id to get the corresponding Transactions",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Purchase Order Id to get the corresponding Transactions",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "salesOrderId",
                        "in": "query",
                        "description": "Sales Order Id to get the corresponding Transactions",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "ticketNo",
                        "in": "query",
                        "description": "Ticket Number to get the corresponding Transactions",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    },
                    {
                        "name": "warehouseId",
                        "in": "query",
                        "description": "Warehouse Id Id to get the corresponding Transactions",
                        "required": false,
                        "type": "integer",
                        "format": "int64",
                        "allowEmptyValue": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Transaction"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/users": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "User data erasure",
                "description": "Remove specified User Reference from the System and replace with DUMMY",
                "operationId": "removeUserUsingDELETE",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user-ref",
                        "in": "header",
                        "description": "User Reference to remove from the System and replace with DUMMY",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/users-activities": {
            "get": {
                "tags": [
                    "User Activities"
                ],
                "summary": "Get Order creation details and update/delete details of other entities for given user",
                "description": "Get Order creation details and update/delete details of other entities for given user",
                "operationId": "getAllUserActivityUsingGET",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user-ref",
                        "in": "header",
                        "description": "Get creation/update/deletion details by userRef",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                },
                "deprecated": false
            },
            "post": {
                "tags": [
                    "User Activities"
                ],
                "summary": "Generate User Activity Details",
                "description": "Generate User Activity Details for a user ",
                "operationId": "initiateUserActivityGenerationUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user-ref",
                        "in": "header",
                        "description": "Initiate generation of User Activities for a given user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CreateUserActivityResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/vats": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get Vat Information",
                "description": "Get all Vat Information",
                "operationId": "getAllVatInfoUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Vat"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/webhook-messages": {
            "post": {
                "tags": [
                    "Webhook Messages"
                ],
                "summary": "Manually Publishes Web Hook Messages",
                "description": "Manually Publishes Web Hook Messages for the specified Action Type",
                "operationId": "publishWebhookMessagesUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "republishRequest",
                        "description": "republishRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WebhookMessagesRepublishRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderApiResponse"
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/api/v1/webhooks": {
            "get": {
                "tags": [
                    "Webhooks"
                ],
                "summary": "Get All Webhooks",
                "description": "Get All the Webhook information",
                "operationId": "getAllWebhookInformationUsingGET",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Webhook"
                            }
                        }
                    }
                },
                "deprecated": false
            }
        },
        "/order-report/pdf/{orderNumber}": {
            "get": {
                "tags": [
                    "Sales Order PDF Controller"
                ],
                "summary": "createPDF",
                "operationId": "createPDFUsingGET",
                "produces": [
                    "application/pdf"
                ],
                "parameters": [
                    {
                        "name": "orderNumber",
                        "in": "path",
                        "description": "orderNumber",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StreamingResponseBody"
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "ApiError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "title": "ApiError"
        },
        "Assortment": {
            "type": "object",
            "properties": {
                "assortmentCode": {
                    "type": "string"
                },
                "assortmentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "assortmentName": {
                    "type": "string"
                }
            },
            "title": "Assortment"
        },
        "AuditRecord": {
            "type": "object",
            "properties": {
                "auditTrailId": {
                    "type": "integer",
                    "format": "int64"
                },
                "changedKeyValue": {
                    "type": "string"
                },
                "changedUser": {
                    "type": "string"
                },
                "columnName": {
                    "type": "string"
                },
                "dateCreated": {
                    "type": "string",
                    "format": "date-time"
                },
                "newValue": {
                    "type": "string"
                },
                "oldValue": {
                    "type": "string"
                },
                "tableName": {
                    "type": "string"
                }
            },
            "title": "AuditRecord"
        },
        "AvailableStockRequestDto": {
            "type": "object",
            "required": [
                "productIds"
            ],
            "properties": {
                "participantAccountExternalId": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productExternalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "productIds": {
                    "type": "array",
                    "description": "Required on Retrieving Available Stocks",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "structureSetId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "AvailableStockRequestDto"
        },
        "BatchJobActionRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "job": {
                    "type": "string"
                },
                "jobParams": {
                    "type": "object"
                }
            },
            "title": "BatchJobActionRequest"
        },
        "BatchJobRequest": {
            "type": "object",
            "properties": {
                "batchJobType": {
                    "type": "string",
                    "enum": [
                        "ACCOUNTING_TRANSACTION_EXPORT",
                        "FAIR_STOCK_DISTRIBUTION",
                        "STOCK_RESERVATION",
                        "SALES_ORDER_INVOICE_GENERATION"
                    ]
                },
                "jobParams": {
                    "type": "object"
                }
            },
            "title": "BatchJobRequest"
        },
        "CalculationTransaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "calculationTransactionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "calculationType": {
                    "type": "string"
                },
                "calculationTypeDescription": {
                    "type": "string"
                },
                "invoiceLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "salesOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "transactionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "transactionOrderType": {
                    "type": "string",
                    "enum": [
                        "PURCHASE",
                        "SALES",
                        "OTHER"
                    ]
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "CalculationTransaction"
        },
        "CalculationTypeCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "title": "CalculationTypeCode"
        },
        "Campaign": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "type": "integer",
                    "format": "int64"
                },
                "code": {
                    "type": "string"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "Campaign"
        },
        "ClaimOrder": {
            "type": "object",
            "required": [
                "claimOrderLines",
                "customer",
                "externalReference"
            ],
            "properties": {
                "claimDate": {
                    "type": "string",
                    "format": "date"
                },
                "claimOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "claimOrderLines": {
                    "type": "array",
                    "description": "Required on Creation",
                    "items": {
                        "$ref": "#/definitions/ClaimOrderLine"
                    }
                },
                "comment": {
                    "type": "string"
                },
                "customer": {
                    "description": "Required on Creation",
                    "$ref": "#/definitions/ParticipantAccount"
                },
                "externalReference": {
                    "type": "string",
                    "description": "Required on Creation"
                },
                "orderStatus": {
                    "type": "string"
                },
                "purchaseOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                },
                "warehouse": {
                    "$ref": "#/definitions/ParticipantAccount"
                }
            },
            "title": "ClaimOrder"
        },
        "ClaimOrderLine": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "attachedImageUrl": {
                    "type": "string"
                },
                "claimOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "claimOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "comment": {
                    "type": "string"
                },
                "commercialContract": {
                    "$ref": "#/definitions/CommercialContract"
                },
                "description": {
                    "type": "string"
                },
                "disableVatCalculation": {
                    "type": "boolean"
                },
                "externalProductId": {
                    "type": "string"
                },
                "gtin": {
                    "type": "string"
                },
                "invoiceNumber": {
                    "type": "string"
                },
                "invoicedPrice": {
                    "type": "number",
                    "format": "double"
                },
                "invoicedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "packagingName": {
                    "type": "string"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packagingTypeCode": {
                    "type": "string"
                },
                "pickedWeight": {
                    "$ref": "#/definitions/Weight"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "reason": {
                    "type": "string"
                },
                "reasonReference": {
                    "$ref": "#/definitions/ClaimReasonReference"
                },
                "sourceSystem": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedDeliveryDate": {
                    "type": "string",
                    "format": "date"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                },
                "vatPercentage": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "ClaimOrderLine"
        },
        "ClaimReasonReference": {
            "type": "object",
            "properties": {
                "claimReasonReferenceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "description": {
                    "type": "string"
                },
                "priceSource": {
                    "type": "string"
                },
                "referenceCode": {
                    "type": "string"
                }
            },
            "title": "ClaimReasonReference"
        },
        "CommerceIntegrationCartPriceResponseDto": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "basePrice": {
                    "type": "number",
                    "format": "double"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Discount"
                    }
                },
                "externalProductId": {
                    "type": "string"
                },
                "mixingFee": {
                    "type": "number",
                    "format": "double"
                },
                "priceDiscountIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "CommerceIntegrationCartPriceResponseDto"
        },
        "CommerceIntegrationCartProductDto": {
            "type": "object",
            "properties": {
                "externalProductId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "CommerceIntegrationCartProductDto"
        },
        "CommerceIntegrationCartRequestDto": {
            "type": "object",
            "properties": {
                "externalCustomerId": {
                    "type": "string"
                },
                "externalProjectId": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CommerceIntegrationCartProductDto"
                    }
                }
            },
            "title": "CommerceIntegrationCartRequestDto"
        },
        "CommerceIntegrationCartResponseDto": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "discountAmount": {
                    "type": "number",
                    "format": "double"
                },
                "discountPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CommerceIntegrationCartPriceResponseDto"
                    }
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "CommerceIntegrationCartResponseDto"
        },
        "CommercialContract": {
            "type": "object",
            "properties": {
                "commercialContractId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contractCode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                }
            },
            "title": "CommercialContract"
        },
        "CommunicationSetup": {
            "type": "object",
            "properties": {
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "communicationSetupId": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "CommunicationSetup"
        },
        "Contact": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "contactId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contactName": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "fax": {
                    "type": "string"
                },
                "information": {
                    "type": "string"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "postNumber": {
                    "type": "string"
                },
                "postPlace": {
                    "type": "string"
                },
                "workEmail": {
                    "type": "string"
                },
                "workPhone": {
                    "type": "string"
                }
            },
            "title": "Contact"
        },
        "Country": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "Country"
        },
        "CreateUserActivityResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "startedOn": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "CreateUserActivityResponse"
        },
        "Customer": {
            "type": "object",
            "properties": {
                "customerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "customerName": {
                    "type": "string"
                }
            },
            "title": "Customer"
        },
        "CustomerCreditDto": {
            "type": "object",
            "properties": {
                "creditLimit": {
                    "type": "number",
                    "format": "double"
                },
                "creditRestricted": {
                    "type": "boolean"
                },
                "creditTotal": {
                    "type": "number",
                    "format": "double"
                },
                "dueBalance": {
                    "type": "number",
                    "format": "double"
                },
                "salesRestricted": {
                    "type": "boolean"
                }
            },
            "title": "CustomerCreditDto"
        },
        "CustomerProject": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "externalCustomerId": {
                    "type": "string"
                },
                "externalProjectId": {
                    "type": "string"
                },
                "registeredDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "CustomerProject"
        },
        "Discount": {
            "type": "object",
            "properties": {
                "discountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "percentage": {
                    "type": "number",
                    "format": "double"
                },
                "priceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "Discount"
        },
        "DocumentMetaData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "documentId": {
                    "type": "integer",
                    "format": "int64"
                },
                "documentName": {
                    "type": "string"
                },
                "fileExtension": {
                    "type": "string"
                },
                "uploadedDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "title": "DocumentMetaData"
        },
        "ExternalCustomerProject": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "externalProjectId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "ExternalCustomerProject"
        },
        "FailureGetDto": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "failedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "reason": {
                    "type": "string"
                }
            },
            "title": "FailureGetDto"
        },
        "Frequency": {
            "type": "object",
            "properties": {
                "adjustHolidays": {
                    "type": "boolean"
                },
                "frequencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "Frequency"
        },
        "GlobalSettings": {
            "type": "object",
            "properties": {
                "attribute": {
                    "type": "string"
                },
                "globalSettingsId": {
                    "type": "integer",
                    "format": "int64"
                },
                "value": {
                    "type": "string"
                }
            },
            "title": "GlobalSettings"
        },
        "GlobalSettingsApiResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "error": {
                    "$ref": "#/definitions/ApiError"
                },
                "remarks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "SUCCESS",
                        "WARNING",
                        "PARTIAL",
                        "ERROR"
                    ]
                }
            },
            "title": "GlobalSettingsApiResponse"
        },
        "Incoterm": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "incotermCode": {
                    "type": "string"
                }
            },
            "title": "Incoterm"
        },
        "LedgerDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string"
                },
                "counterPartyAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "currencyDate": {
                    "type": "string",
                    "format": "date"
                },
                "customsReference": {
                    "type": "string"
                },
                "depositAmount": {
                    "type": "number",
                    "format": "double"
                },
                "exchangeRate": {
                    "type": "number",
                    "format": "double"
                },
                "homeAmount": {
                    "type": "number",
                    "format": "double"
                },
                "isoCurrency": {
                    "type": "string"
                },
                "ledgerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "salesInvoiceKid": {
                    "type": "string"
                },
                "salesInvoiceNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "salesOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "supplierId": {
                    "type": "integer",
                    "format": "int64"
                },
                "supplierName": {
                    "type": "string"
                },
                "transactionDate": {
                    "type": "string",
                    "format": "date"
                },
                "transactionOrderType": {
                    "type": "string",
                    "enum": [
                        "PURCHASE",
                        "SALES",
                        "OTHER"
                    ]
                },
                "transactionType": {
                    "type": "string"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "LedgerDTO"
        },
        "Length": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "unit": {
                    "type": "string",
                    "enum": [
                        "Millimeter",
                        "Centimeter",
                        "Decimeter",
                        "Meter",
                        "Kilometer"
                    ]
                }
            },
            "title": "Length"
        },
        "LinkedProduct": {
            "type": "object",
            "properties": {
                "linkType": {
                    "type": "string"
                },
                "linkedProductDbId": {
                    "type": "integer",
                    "format": "int64"
                },
                "outwardLink": {
                    "type": "boolean"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                }
            },
            "title": "LinkedProduct"
        },
        "LoadCarrierType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "loadCarrierTypeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "sizeRatio": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "LoadCarrierType"
        },
        "LocalTime": {
            "type": "object",
            "properties": {
                "hour": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": -128,
                    "maximum": 127
                },
                "minute": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": -128,
                    "maximum": 127
                },
                "nano": {
                    "type": "integer",
                    "format": "int32"
                },
                "second": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": -128,
                    "maximum": 127
                }
            },
            "title": "LocalTime"
        },
        "Location": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "addressNameOverride": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "locationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "postNumber": {
                    "type": "string"
                },
                "postPlace": {
                    "type": "string"
                }
            },
            "title": "Location"
        },
        "MdmApiError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "title": "MdmApiError"
        },
        "MdmApiResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "error": {
                    "$ref": "#/definitions/MdmApiError"
                },
                "remarks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "SUCCESS",
                        "WARNING",
                        "PARTIAL",
                        "ERROR"
                    ]
                }
            },
            "title": "MdmApiResponse"
        },
        "OrderApiResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "error": {
                    "$ref": "#/definitions/ApiError"
                },
                "remarks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "SUCCESS",
                        "WARNING",
                        "PARTIAL",
                        "ERROR"
                    ]
                }
            },
            "title": "OrderApiResponse"
        },
        "OrderLine": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "basePrice": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string",
                    "enum": [
                        "INSUFFICIENT_STOCKS",
                        "NON_POSITIVE_BASE_PRICE",
                        "NON_POSITIVE_ORDERED_QTY",
                        "NON_POSITIVE_AMOUNT",
                        "NULL_BASE_PRICE",
                        "NULL_ORDERED_QTY",
                        "NON_POSITIVE_PRICE",
                        "NON_POSITIVE_UPDATED_QTY",
                        "INACTIVE_ORDERED_PRODUCT",
                        "INACTIVE_ORDERED_PACKAGING",
                        "PRODUCT_LICENCE_NOT_VERIFIED",
                        "QUANTITY_ADJUSTED_TO_ZERO",
                        "NEW_ORDER_LINE_ADDED_WITH_ALTERNATE_PRODUCT",
                        "NEW_ORDER_LINE_ADDED_WITH_CLEARANCE_PRODUCT",
                        "NOT_WITHIN_RESERVATION_PERIOD",
                        "MAX_ORDER_QUANTITY_EXCEEDED",
                        "STOCKS_PARTIALLY_ALLOCATED"
                    ]
                },
                "containedAmountBaseItem": {
                    "type": "number",
                    "format": "double"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "depositRelatedOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discount": {
                    "type": "number",
                    "format": "double"
                },
                "discountOverridden": {
                    "type": "boolean"
                },
                "exchangeRate": {
                    "type": "number",
                    "format": "double"
                },
                "externalBookingId": {
                    "type": "string"
                },
                "externalProductId": {
                    "type": "string"
                },
                "gtin": {
                    "type": "string"
                },
                "homeAmount": {
                    "type": "number",
                    "format": "double"
                },
                "incoterm": {
                    "type": "string"
                },
                "isoCurrency": {
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineType": {
                    "type": "string",
                    "enum": [
                        "PURCHASE",
                        "SALES",
                        "UNKNOWN"
                    ]
                },
                "orderStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "originalOrderLineReference": {
                    "type": "string"
                },
                "originalOrderReference": {
                    "type": "string"
                },
                "packaging": {
                    "$ref": "#/definitions/Packaging"
                },
                "packagingName": {
                    "type": "string"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packagingTypeCode": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceMeasurementInfo": {
                    "$ref": "#/definitions/PriceMeasurementInfo"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productName": {
                    "type": "string"
                },
                "updatedDeliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                },
                "vatPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "volume": {
                    "$ref": "#/definitions/Volume"
                },
                "warehouseGln": {
                    "type": "string",
                    "description": "Warehouse GLN is an optional field that is used to define as an identifier when warehouseId is not provided On Creation"
                },
                "warehouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                }
            },
            "title": "OrderLine"
        },
        "OrderLineInformation": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "orderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "OrderLineInformation"
        },
        "OrderLineRelationshipDto": {
            "type": "object",
            "properties": {
                "orderLineId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "OrderLineRelationshipDto"
        },
        "OrderLinesRequestDto": {
            "type": "object",
            "properties": {
                "eagerFetch": {
                    "type": "boolean"
                },
                "externalBookingId": {
                    "type": "string"
                },
                "orderLineIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "orderLineType": {
                    "type": "string",
                    "enum": [
                        "PURCHASE",
                        "SALES",
                        "UNKNOWN"
                    ]
                }
            },
            "title": "OrderLinesRequestDto"
        },
        "OrderRelationshipDto": {
            "type": "object",
            "properties": {
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "OrderRelationshipDto"
        },
        "OrderStatus": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "OrderStatus"
        },
        "OverrideDeliveryPartyDto": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "contactCompanyName": {
                    "type": "string"
                },
                "contactName": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "information": {
                    "type": "string"
                },
                "postNumber": {
                    "type": "string"
                },
                "postPlace": {
                    "type": "string"
                },
                "workEmail": {
                    "type": "string"
                },
                "workPhone": {
                    "type": "string"
                }
            },
            "title": "OverrideDeliveryPartyDto"
        },
        "Packaging": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "childPackage": {
                    "$ref": "#/definitions/Packaging"
                },
                "containedAmountBaseItem": {
                    "type": "number",
                    "format": "double"
                },
                "containedAmountCase": {
                    "type": "number",
                    "format": "double"
                },
                "containedChildPackagingCount": {
                    "type": "number",
                    "format": "double"
                },
                "customUnitCode": {
                    "type": "string"
                },
                "customsWeight": {
                    "$ref": "#/definitions/Weight"
                },
                "deposits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PackagingDeposit"
                    }
                },
                "description": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "grossWeight": {
                    "$ref": "#/definitions/Weight"
                },
                "gtin": {
                    "type": "string"
                },
                "hasDeposit": {
                    "type": "boolean"
                },
                "height": {
                    "$ref": "#/definitions/Length"
                },
                "imageUrl": {
                    "type": "string"
                },
                "layerCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "length": {
                    "$ref": "#/definitions/Length"
                },
                "netWeight": {
                    "$ref": "#/definitions/Weight"
                },
                "orderableUnit": {
                    "type": "boolean"
                },
                "packagingId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packagingName": {
                    "type": "string"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packagingTypeCode": {
                    "type": "string"
                },
                "parentPackage": {
                    "$ref": "#/definitions/Packaging"
                },
                "priceMeasurementInfo": {
                    "$ref": "#/definitions/PriceMeasurementInfo"
                },
                "productGroup": {
                    "type": "string"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unitSize": {
                    "type": "string"
                },
                "volume": {
                    "$ref": "#/definitions/Volume"
                },
                "width": {
                    "$ref": "#/definitions/Length"
                }
            },
            "title": "Packaging"
        },
        "PackagingDeposit": {
            "type": "object",
            "properties": {
                "depositMultiplier": {
                    "type": "integer",
                    "format": "int32"
                },
                "depositProduct": {
                    "$ref": "#/definitions/Product"
                },
                "depositType": {
                    "type": "string"
                }
            },
            "title": "PackagingDeposit"
        },
        "PalletInformation": {
            "type": "object",
            "required": [
                "palletType",
                "sscc"
            ],
            "properties": {
                "palletInformationID": {
                    "type": "integer",
                    "format": "int64"
                },
                "palletType": {
                    "type": "string",
                    "description": "Required on Creation"
                },
                "parentSscc": {
                    "type": "string"
                },
                "sscc": {
                    "type": "string",
                    "description": "Required on Creation"
                }
            },
            "title": "PalletInformation"
        },
        "Participant": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "channelType": {
                    "type": "string"
                },
                "chargeVat": {
                    "type": "boolean"
                },
                "externalId": {
                    "type": "string"
                },
                "gln": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizationId": {
                    "type": "string"
                },
                "participantAccounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParticipantAccount"
                    }
                },
                "participantId": {
                    "type": "integer",
                    "format": "int64"
                },
                "storeChain": {
                    "$ref": "#/definitions/StoreChain"
                }
            },
            "title": "Participant"
        },
        "ParticipantAccount": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "accountingRegion": {
                    "$ref": "#/definitions/Region"
                },
                "active": {
                    "type": "boolean"
                },
                "channelType": {
                    "type": "string"
                },
                "chargeVat": {
                    "type": "boolean"
                },
                "collectionPointId": {
                    "type": "string"
                },
                "communicationSetups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CommunicationSetup"
                    }
                },
                "contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParticipantAccountContact"
                    }
                },
                "crossDock": {
                    "type": "boolean"
                },
                "defaultAccount": {
                    "type": "boolean"
                },
                "depositsIncludedInPrice": {
                    "type": "boolean"
                },
                "directDelivery": {
                    "type": "boolean"
                },
                "externalId": {
                    "type": "string"
                },
                "gln": {
                    "type": "string"
                },
                "glnForOrders": {
                    "type": "string"
                },
                "incoterm": {
                    "$ref": "#/definitions/Incoterm"
                },
                "internalAccount": {
                    "type": "boolean"
                },
                "invoiceLevelMaxDeviationAmount": {
                    "type": "number",
                    "format": "double"
                },
                "invoiceLevelMaxDeviationPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "invoiceLevelMaxDeviationType": {
                    "type": "string"
                },
                "invoiceLineLevelMaxDeviationAmount": {
                    "type": "number",
                    "format": "double"
                },
                "invoiceLineLevelMaxDeviationPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "invoiceLineLevelMaxDeviationType": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                },
                "legalName": {
                    "type": "string"
                },
                "licences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParticipantAccountLicence"
                    }
                },
                "loadCarrierType": {
                    "$ref": "#/definitions/LoadCarrierType"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParticipantAccountLocation"
                    }
                },
                "longitude": {
                    "type": "string"
                },
                "maxOrderQuantityPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "openingHours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParticipantAccountOpeningHour"
                    }
                },
                "operation": {
                    "$ref": "#/definitions/ParticipantAccountOperation"
                },
                "organizationNumber": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "participant": {
                    "$ref": "#/definitions/Participant"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentInstructions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentInstruction"
                    }
                },
                "region": {
                    "$ref": "#/definitions/Region"
                },
                "requireExternalProject": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "CUSTOMER",
                        "WAREHOUSE",
                        "SUPPLIER",
                        "CUSTOMS"
                    ]
                },
                "shortName": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "warehouseAffiliations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ParticipantAccount"
                    }
                }
            },
            "title": "ParticipantAccount"
        },
        "ParticipantAccountContact": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address1": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "contactId": {
                    "type": "integer",
                    "format": "int64"
                },
                "contactName": {
                    "type": "string"
                },
                "contactType": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "fax": {
                    "type": "string"
                },
                "information": {
                    "type": "string"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "participantAccountContactId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "postNumber": {
                    "type": "string"
                },
                "postPlace": {
                    "type": "string"
                },
                "primaryContact": {
                    "type": "boolean"
                },
                "workEmail": {
                    "type": "string"
                },
                "workPhone": {
                    "type": "string"
                }
            },
            "title": "ParticipantAccountContact"
        },
        "ParticipantAccountFilterBulkCriteria": {
            "type": "object",
            "properties": {
                "eagerFetch": {
                    "type": "boolean"
                },
                "participantAccountExternalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "participantAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "ParticipantAccountFilterBulkCriteria"
        },
        "ParticipantAccountLicence": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "licenceType": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantAccountLicenceId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "ParticipantAccountLicence"
        },
        "ParticipantAccountLocation": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "address2": {
                    "type": "string"
                },
                "addressNameOverride": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string"
                },
                "locationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "locationType": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantAccountLocationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "postNumber": {
                    "type": "string"
                },
                "postPlace": {
                    "type": "string"
                },
                "primaryLocation": {
                    "type": "boolean"
                }
            },
            "title": "ParticipantAccountLocation"
        },
        "ParticipantAccountOpeningHour": {
            "type": "object",
            "properties": {
                "closingTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "day": {
                    "type": "string",
                    "enum": [
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY",
                        "SUNDAY"
                    ]
                },
                "openingHourId": {
                    "type": "integer",
                    "format": "int64"
                },
                "openingTime": {
                    "$ref": "#/definitions/LocalTime"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "ParticipantAccountOpeningHour"
        },
        "ParticipantAccountOperation": {
            "type": "object",
            "properties": {
                "firstOperatingDate": {
                    "type": "string",
                    "format": "date"
                },
                "lastOperatingDate": {
                    "type": "string",
                    "format": "date"
                },
                "openingDate": {
                    "type": "string",
                    "format": "date"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantAccountOperationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "shopId": {
                    "type": "string"
                },
                "shopSize": {
                    "type": "string"
                }
            },
            "title": "ParticipantAccountOperation"
        },
        "ParticipantAccountTempOutage": {
            "type": "object",
            "properties": {
                "closedFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "closedTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "externalParticipantAccountId": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantAccountOutageId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reason": {
                    "type": "string"
                }
            },
            "title": "ParticipantAccountTempOutage"
        },
        "ParticipantPrice": {
            "type": "object",
            "properties": {
                "basePrice": {
                    "type": "number",
                    "format": "double",
                    "description": "Base Price is different from Price since the price may depend on other parameters like the Quantity"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Discount"
                    }
                },
                "exchangeRate": {
                    "type": "number",
                    "format": "double"
                },
                "isoCurrency": {
                    "type": "string"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packagingType": {
                    "type": "string"
                },
                "participantAccountExternalId": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantId": {
                    "type": "integer",
                    "format": "int64"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "priceType": {
                    "type": "string",
                    "enum": [
                        "SALES_PRICE",
                        "PURCHASE_PRICE"
                    ]
                },
                "productExternalId": {
                    "type": "string"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "ParticipantPrice"
        },
        "ParticipantPriceRequestDto": {
            "type": "object",
            "properties": {
                "applicableFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "eagerFetch": {
                    "type": "boolean"
                },
                "externalProjectId": {
                    "type": "string"
                },
                "packagingStructureIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "packagingType": {
                    "type": "string"
                },
                "participantAccountExternalId": {
                    "type": "string",
                    "description": "This is required when app.price-source property is set to commerceintegration"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "priceType": {
                    "type": "string"
                },
                "productIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "products": {
                    "type": "array",
                    "description": "This can be provided only when app.price-source property is set to commerceintegration",
                    "items": {
                        "$ref": "#/definitions/PriceRequestProductDto"
                    }
                }
            },
            "title": "ParticipantPriceRequestDto"
        },
        "PaymentInstruction": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string"
                },
                "bankName": {
                    "type": "string"
                },
                "bic": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "defaultPayment": {
                    "type": "boolean"
                },
                "iban": {
                    "type": "string"
                },
                "instructionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sortCode": {
                    "type": "string"
                },
                "swift": {
                    "type": "string"
                }
            },
            "title": "PaymentInstruction"
        },
        "PriceCreationRequestDto": {
            "type": "object",
            "properties": {
                "dateFrom": {
                    "type": "string",
                    "format": "date-time"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time"
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Discount"
                    }
                },
                "exchangeRate": {
                    "type": "number",
                    "format": "double"
                },
                "isoCurrency": {
                    "type": "string"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packagingType": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantId": {
                    "type": "integer",
                    "format": "int64"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "priceType": {
                    "type": "string"
                },
                "productExternalId": {
                    "type": "string"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "PriceCreationRequestDto"
        },
        "PriceDeviation": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "assignee": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "participantId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantName": {
                    "type": "string"
                },
                "priceDeviationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "priceDeviationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "priceDeviationLines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PriceDeviationLine"
                    }
                },
                "priceDeviationNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PriceDeviation"
        },
        "PriceDeviationLine": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "address1": {
                    "type": "string"
                },
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string"
                },
                "counterPartyAddress1": {
                    "type": "string"
                },
                "counterPartyAddress2": {
                    "type": "string"
                },
                "counterPartyCountry": {
                    "type": "string"
                },
                "counterPartyExternalId": {
                    "type": "string"
                },
                "counterPartyGln": {
                    "type": "string"
                },
                "counterPartyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "counterPartyName": {
                    "type": "string"
                },
                "counterPartyPostNo": {
                    "type": "string"
                },
                "counterPartyPostPlace": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "dc": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "externalProductId": {
                    "type": "string"
                },
                "gtin": {
                    "type": "string"
                },
                "invoiceLineDiscount": {
                    "type": "number",
                    "format": "double"
                },
                "invoiceLinePrice": {
                    "type": "number",
                    "format": "double"
                },
                "invoiceLineQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "owner": {
                    "type": "string"
                },
                "packagingTypeCode": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantId": {
                    "type": "integer",
                    "format": "int64"
                },
                "phone": {
                    "type": "string"
                },
                "priceDeviationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "priceDeviationLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productName": {
                    "type": "string"
                },
                "purchaseInvoiceDate": {
                    "type": "string",
                    "format": "date"
                },
                "purchaseInvoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseInvoiceLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineAmountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineAmountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLinePrice": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineVat": {
                    "type": "number",
                    "format": "double"
                },
                "vatPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "zipCode": {
                    "type": "string"
                },
                "zipCodeName": {
                    "type": "string"
                }
            },
            "title": "PriceDeviationLine"
        },
        "PriceMeasurementInfo": {
            "type": "object",
            "properties": {
                "calculatedContent": {
                    "type": "number",
                    "format": "double"
                },
                "calculationFactor": {
                    "type": "number",
                    "format": "double"
                },
                "unitCode": {
                    "type": "string"
                }
            },
            "title": "PriceMeasurementInfo"
        },
        "PriceRequestProductDto": {
            "type": "object",
            "properties": {
                "externalProductId": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PriceRequestProductDto"
        },
        "PriceUpdateRequestDto": {
            "type": "object",
            "properties": {
                "price": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PriceUpdateRequestDto"
        },
        "Product": {
            "type": "object",
            "properties": {
                "accountingTransactionCode": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "adr": {
                    "type": "boolean"
                },
                "alternativeName": {
                    "type": "string"
                },
                "assortment": {
                    "$ref": "#/definitions/Assortment"
                },
                "batchSensitive": {
                    "type": "boolean"
                },
                "campaigns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Campaign"
                    }
                },
                "category": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "crossDock": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "internalId": {
                    "type": "string"
                },
                "isoCurrency": {
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "licenceType": {
                    "type": "string"
                },
                "linkedProducts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LinkedProduct"
                    }
                },
                "locationGroupId": {
                    "type": "string"
                },
                "markedToBePhasedOut": {
                    "type": "boolean"
                },
                "maxOrderDpakQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "maxOrderFpakQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "maxStorageTemperature": {
                    "$ref": "#/definitions/Temperature"
                },
                "minStorageTemperature": {
                    "$ref": "#/definitions/Temperature"
                },
                "multipack": {
                    "type": "boolean"
                },
                "nafCode": {
                    "type": "string"
                },
                "packagings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Packaging"
                    }
                },
                "productAlertCode": {
                    "type": "string"
                },
                "productAvailabilityDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductAvailabilityDetail"
                    }
                },
                "productBrand": {
                    "$ref": "#/definitions/ProductBrand"
                },
                "productCalculationData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductCalculationData"
                    }
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productName": {
                    "type": "string"
                },
                "shelfLifeDays": {
                    "type": "integer",
                    "format": "int32"
                },
                "shopLifeSpan": {
                    "type": "integer",
                    "format": "int32"
                },
                "storageTemperatureZone": {
                    "type": "string"
                },
                "storedLifeSpan": {
                    "type": "integer",
                    "format": "int32"
                },
                "supplierLifeSpan": {
                    "type": "integer",
                    "format": "int32"
                },
                "suppliers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductSupplierRelationship"
                    }
                },
                "variantName": {
                    "type": "string"
                },
                "vat": {
                    "$ref": "#/definitions/Vat"
                },
                "vatCode": {
                    "type": "string"
                },
                "virtualProduct": {
                    "type": "boolean"
                },
                "warehouses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductWarehouseRelationship"
                    }
                }
            },
            "title": "Product"
        },
        "ProductAvailabilityDetail": {
            "type": "object",
            "properties": {
                "firstDateTimeAllowedForOutbound": {
                    "type": "string",
                    "format": "date-time"
                },
                "initialRefillRequestDate": {
                    "type": "string",
                    "format": "date"
                },
                "lastDateTimeAllowedForInbound": {
                    "type": "string",
                    "format": "date-time"
                },
                "lastDateTimeAllowedForOutbound": {
                    "type": "string",
                    "format": "date-time"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "warehouseId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "ProductAvailabilityDetail"
        },
        "ProductBrand": {
            "type": "object",
            "properties": {
                "brandCode": {
                    "type": "string"
                },
                "brandDescription": {
                    "type": "string"
                },
                "productBrandId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "ProductBrand"
        },
        "ProductCalculationData": {
            "type": "object",
            "properties": {
                "calculationType": {
                    "type": "string"
                },
                "derivationNo": {
                    "type": "string"
                },
                "orderType": {
                    "type": "string"
                },
                "productCalculationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "value": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "ProductCalculationData"
        },
        "ProductFilterBulkCriteria": {
            "type": "object",
            "properties": {
                "eagerFetch": {
                    "type": "boolean"
                },
                "externalProductIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "productIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "ProductFilterBulkCriteria"
        },
        "ProductSupplierRelationship": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "collectionPointId": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "incoterm": {
                    "type": "string"
                },
                "leadTime": {
                    "type": "integer",
                    "format": "int64"
                },
                "owner": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "CUSTOMER",
                        "WAREHOUSE",
                        "SUPPLIER",
                        "CUSTOMS"
                    ]
                },
                "supplierProductId": {
                    "type": "string"
                }
            },
            "title": "ProductSupplierRelationship"
        },
        "ProductWarehouseRelationship": {
            "type": "object",
            "properties": {
                "accountName": {
                    "type": "string"
                },
                "commercialContract": {
                    "$ref": "#/definitions/CommercialContract"
                },
                "participantAccountExternalId": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productWarehouseRelationshipId": {
                    "type": "integer",
                    "format": "int64"
                },
                "stockOutCode": {
                    "$ref": "#/definitions/StockOutCode"
                }
            },
            "title": "ProductWarehouseRelationship"
        },
        "PurchaseInvoice": {
            "type": "object",
            "required": [
                "amountVatExcluded",
                "invoiceLines",
                "purchaseOrderId"
            ],
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double",
                    "description": "Required on Creation"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string"
                },
                "creditNoteNumber": {
                    "type": "string"
                },
                "externalOrderId": {
                    "type": "string"
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "invoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoiceLines": {
                    "type": "array",
                    "description": "Required on Creation",
                    "items": {
                        "$ref": "#/definitions/PurchaseInvoiceLine"
                    }
                },
                "invoiceNumber": {
                    "type": "string"
                },
                "kid": {
                    "type": "string"
                },
                "matchedAmountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "matchedAmountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "nationalCustomerId": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "paymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentInstruction": {
                    "$ref": "#/definitions/PaymentInstruction"
                },
                "purchaseOrderId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required on Creation"
                },
                "receiverAddress": {
                    "$ref": "#/definitions/Location"
                },
                "receiverContact": {
                    "$ref": "#/definitions/Contact"
                },
                "receiverId": {
                    "type": "integer",
                    "format": "int64"
                },
                "receiverName": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "supplierAddress": {
                    "$ref": "#/definitions/Location"
                },
                "supplierContact": {
                    "$ref": "#/definitions/Contact"
                },
                "supplierOwner": {
                    "type": "string"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PurchaseInvoice"
        },
        "PurchaseInvoiceDto": {
            "type": "object",
            "properties": {
                "invoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "PurchaseInvoiceDto"
        },
        "PurchaseInvoiceLine": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "chargeVat": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "discount": {
                    "type": "number",
                    "format": "double"
                },
                "externalProductId": {
                    "type": "string"
                },
                "gtin": {
                    "type": "string"
                },
                "invoiceLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoiceLinePrice": {
                    "type": "number",
                    "format": "double"
                },
                "invoiceLineQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "packagingTypeCode": {
                    "type": "string"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseInvoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineAmountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineAmountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLinePrice": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineVat": {
                    "type": "number",
                    "format": "double"
                },
                "vatPercentage": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PurchaseInvoiceLine"
        },
        "PurchaseOrder": {
            "type": "object",
            "required": [
                "orderLines",
                "supplierId"
            ],
            "properties": {
                "arrivalDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "channelType": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "crossDock": {
                    "type": "boolean"
                },
                "customsReference": {
                    "type": "string"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deliveryPartyAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentMetaData"
                    }
                },
                "externalMessageId": {
                    "type": "string"
                },
                "externalSupplierId": {
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLines": {
                    "type": "array",
                    "description": "Required on Creation",
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderLine"
                    }
                },
                "orderStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderType": {
                    "type": "string"
                },
                "originalOrderReference": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "purchaseInvoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PurchaseInvoiceDto"
                    }
                },
                "relatedSalesOrders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderRelationshipDto"
                    }
                },
                "supplierGln": {
                    "type": "string",
                    "description": "Supplier GLN is an optional field that is used to define as an identifier when supplierId is not provided On Creation"
                },
                "supplierId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required on Creation"
                },
                "supplierName": {
                    "type": "string"
                },
                "updatedDeliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "volume": {
                    "$ref": "#/definitions/Volume"
                },
                "warehouseGln": {
                    "type": "string",
                    "description": "Warehouse GLN is an optional field that is used to define as an identifier when warehouseId is not provided On Creation"
                },
                "warehouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                }
            },
            "title": "PurchaseOrder"
        },
        "PurchaseOrderLine": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "arrivalDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "basePrice": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string",
                    "enum": [
                        "INSUFFICIENT_STOCKS",
                        "NON_POSITIVE_BASE_PRICE",
                        "NON_POSITIVE_ORDERED_QTY",
                        "NON_POSITIVE_AMOUNT",
                        "NULL_BASE_PRICE",
                        "NULL_ORDERED_QTY",
                        "NON_POSITIVE_PRICE",
                        "NON_POSITIVE_UPDATED_QTY",
                        "INACTIVE_ORDERED_PRODUCT",
                        "INACTIVE_ORDERED_PACKAGING",
                        "PRODUCT_LICENCE_NOT_VERIFIED",
                        "QUANTITY_ADJUSTED_TO_ZERO",
                        "NEW_ORDER_LINE_ADDED_WITH_ALTERNATE_PRODUCT",
                        "NEW_ORDER_LINE_ADDED_WITH_CLEARANCE_PRODUCT",
                        "NOT_WITHIN_RESERVATION_PERIOD",
                        "MAX_ORDER_QUANTITY_EXCEEDED",
                        "STOCKS_PARTIALLY_ALLOCATED"
                    ]
                },
                "containedAmountBaseItem": {
                    "type": "number",
                    "format": "double"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "depositRelatedOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discount": {
                    "type": "number",
                    "format": "double"
                },
                "discountOverridden": {
                    "type": "boolean"
                },
                "exchangeRate": {
                    "type": "number",
                    "format": "double"
                },
                "externalBookingId": {
                    "type": "string"
                },
                "externalBuyerProductId": {
                    "type": "string"
                },
                "externalProductId": {
                    "type": "string"
                },
                "externalSupplierProductId": {
                    "type": "string"
                },
                "gtin": {
                    "type": "string"
                },
                "homeAmount": {
                    "type": "number",
                    "format": "double"
                },
                "incoterm": {
                    "type": "string"
                },
                "isoCurrency": {
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineType": {
                    "type": "string",
                    "enum": [
                        "PURCHASE",
                        "SALES",
                        "UNKNOWN"
                    ]
                },
                "orderStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "originalOrderLineReference": {
                    "type": "string"
                },
                "originalOrderReference": {
                    "type": "string"
                },
                "packaging": {
                    "$ref": "#/definitions/Packaging"
                },
                "packagingName": {
                    "type": "string"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packagingTypeCode": {
                    "type": "string"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceMeasurementInfo": {
                    "$ref": "#/definitions/PriceMeasurementInfo"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productName": {
                    "type": "string"
                },
                "relatedSalesOrderLines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderLineRelationshipDto"
                    }
                },
                "shippedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "supplier": {
                    "$ref": "#/definitions/ParticipantAccount"
                },
                "tariffQuotaCutoffExceeded": {
                    "type": "boolean"
                },
                "updatedDeliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                },
                "vatPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "volume": {
                    "$ref": "#/definitions/Volume"
                },
                "warehouseGln": {
                    "type": "string",
                    "description": "Warehouse GLN is an optional field that is used to define as an identifier when warehouseId is not provided On Creation"
                },
                "warehouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                }
            },
            "title": "PurchaseOrderLine"
        },
        "PurchaseOrderLineShipmentNoteData": {
            "type": "object",
            "required": [
                "palletInformation"
            ],
            "properties": {
                "batchNumber": {
                    "type": "string"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "gtin": {
                    "type": "string"
                },
                "orderLineNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "palletInformation": {
                    "description": "Required on Creation",
                    "$ref": "#/definitions/PalletInformation"
                },
                "purchaseOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "shipmentNoticeDataId": {
                    "type": "integer",
                    "format": "int64"
                },
                "shippedWeight": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "PurchaseOrderLineShipmentNoteData"
        },
        "Region": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "regionId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "Region"
        },
        "ResponseEntity": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object"
                },
                "statusCode": {
                    "type": "string",
                    "enum": [
                        "100 CONTINUE",
                        "101 SWITCHING_PROTOCOLS",
                        "102 PROCESSING",
                        "103 CHECKPOINT",
                        "200 OK",
                        "201 CREATED",
                        "202 ACCEPTED",
                        "203 NON_AUTHORITATIVE_INFORMATION",
                        "204 NO_CONTENT",
                        "205 RESET_CONTENT",
                        "206 PARTIAL_CONTENT",
                        "207 MULTI_STATUS",
                        "208 ALREADY_REPORTED",
                        "226 IM_USED",
                        "300 MULTIPLE_CHOICES",
                        "301 MOVED_PERMANENTLY",
                        "302 FOUND",
                        "302 MOVED_TEMPORARILY",
                        "303 SEE_OTHER",
                        "304 NOT_MODIFIED",
                        "305 USE_PROXY",
                        "307 TEMPORARY_REDIRECT",
                        "308 PERMANENT_REDIRECT",
                        "400 BAD_REQUEST",
                        "401 UNAUTHORIZED",
                        "402 PAYMENT_REQUIRED",
                        "403 FORBIDDEN",
                        "404 NOT_FOUND",
                        "405 METHOD_NOT_ALLOWED",
                        "406 NOT_ACCEPTABLE",
                        "407 PROXY_AUTHENTICATION_REQUIRED",
                        "408 REQUEST_TIMEOUT",
                        "409 CONFLICT",
                        "410 GONE",
                        "411 LENGTH_REQUIRED",
                        "412 PRECONDITION_FAILED",
                        "413 PAYLOAD_TOO_LARGE",
                        "413 REQUEST_ENTITY_TOO_LARGE",
                        "414 URI_TOO_LONG",
                        "414 REQUEST_URI_TOO_LONG",
                        "415 UNSUPPORTED_MEDIA_TYPE",
                        "416 REQUESTED_RANGE_NOT_SATISFIABLE",
                        "417 EXPECTATION_FAILED",
                        "418 I_AM_A_TEAPOT",
                        "419 INSUFFICIENT_SPACE_ON_RESOURCE",
                        "420 METHOD_FAILURE",
                        "421 DESTINATION_LOCKED",
                        "422 UNPROCESSABLE_ENTITY",
                        "423 LOCKED",
                        "424 FAILED_DEPENDENCY",
                        "425 TOO_EARLY",
                        "426 UPGRADE_REQUIRED",
                        "428 PRECONDITION_REQUIRED",
                        "429 TOO_MANY_REQUESTS",
                        "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
                        "451 UNAVAILABLE_FOR_LEGAL_REASONS",
                        "500 INTERNAL_SERVER_ERROR",
                        "501 NOT_IMPLEMENTED",
                        "502 BAD_GATEWAY",
                        "503 SERVICE_UNAVAILABLE",
                        "504 GATEWAY_TIMEOUT",
                        "505 HTTP_VERSION_NOT_SUPPORTED",
                        "506 VARIANT_ALSO_NEGOTIATES",
                        "507 INSUFFICIENT_STORAGE",
                        "508 LOOP_DETECTED",
                        "509 BANDWIDTH_LIMIT_EXCEEDED",
                        "510 NOT_EXTENDED",
                        "511 NETWORK_AUTHENTICATION_REQUIRED"
                    ]
                },
                "statusCodeValue": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "ResponseEntity"
        },
        "SalesInvoice": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string"
                },
                "creditNote": {
                    "type": "boolean"
                },
                "creditNoteNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "customerAddress": {
                    "$ref": "#/definitions/Location"
                },
                "customerContact": {
                    "$ref": "#/definitions/Contact"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "customerName": {
                    "type": "string"
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "invoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoiceLines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalesInvoiceLine"
                    }
                },
                "invoiceNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "kid": {
                    "type": "string"
                },
                "nationalCustomerId": {
                    "type": "string"
                },
                "paymentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "paymentInstruction": {
                    "$ref": "#/definitions/PaymentInstruction"
                },
                "receiverGln": {
                    "type": "string"
                },
                "receivingCustomerAddress": {
                    "$ref": "#/definitions/Location"
                },
                "receivingCustomerContact": {
                    "$ref": "#/definitions/Contact"
                },
                "receivingCustomerId": {
                    "type": "integer",
                    "format": "int64"
                },
                "receivingCustomerName": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "statusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "SalesInvoice"
        },
        "SalesInvoiceLine": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "discount": {
                    "type": "number",
                    "format": "double"
                },
                "externalProductId": {
                    "type": "string"
                },
                "invoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoiceLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineDescription": {
                    "type": "string"
                },
                "orderLinePrice": {
                    "type": "number",
                    "format": "double"
                },
                "orderLineQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "orderLineVat": {
                    "type": "number",
                    "format": "double"
                },
                "originalOrderLineReference": {
                    "type": "string"
                },
                "originalOrderQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "originalOrderReference": {
                    "type": "string"
                },
                "packaging": {
                    "$ref": "#/definitions/Packaging"
                },
                "packagingName": {
                    "type": "string"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "salesOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatName": {
                    "type": "string"
                },
                "vatPercentage": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "SalesInvoiceLine"
        },
        "SalesOrder": {
            "type": "object",
            "required": [
                "customerId",
                "orderLines"
            ],
            "properties": {
                "bankPaid": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required on Creation"
                },
                "customerName": {
                    "type": "string"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deliveryTermsCode": {
                    "type": "integer",
                    "format": "int64"
                },
                "externalCustomerId": {
                    "type": "string"
                },
                "externalCustomerProjects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExternalCustomerProject"
                    }
                },
                "externalMessageId": {
                    "type": "string"
                },
                "gln": {
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLines": {
                    "type": "array",
                    "description": "Required on Creation",
                    "items": {
                        "$ref": "#/definitions/SalesOrderLine"
                    }
                },
                "orderSource": {
                    "type": "string"
                },
                "orderStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderType": {
                    "type": "string"
                },
                "originalOrderReference": {
                    "type": "string"
                },
                "overrideDeliveryParty": {
                    "$ref": "#/definitions/OverrideDeliveryPartyDto"
                },
                "pickDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "relatedPurchaseOrders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderRelationshipDto"
                    }
                },
                "updatedDeliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "volume": {
                    "$ref": "#/definitions/Volume"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                }
            },
            "title": "SalesOrder"
        },
        "SalesOrderLine": {
            "type": "object",
            "properties": {
                "amountOverridden": {
                    "type": "boolean"
                },
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "baseAmount": {
                    "type": "number",
                    "format": "double"
                },
                "basePrice": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string",
                    "enum": [
                        "INSUFFICIENT_STOCKS",
                        "NON_POSITIVE_BASE_PRICE",
                        "NON_POSITIVE_ORDERED_QTY",
                        "NON_POSITIVE_AMOUNT",
                        "NULL_BASE_PRICE",
                        "NULL_ORDERED_QTY",
                        "NON_POSITIVE_PRICE",
                        "NON_POSITIVE_UPDATED_QTY",
                        "INACTIVE_ORDERED_PRODUCT",
                        "INACTIVE_ORDERED_PACKAGING",
                        "PRODUCT_LICENCE_NOT_VERIFIED",
                        "QUANTITY_ADJUSTED_TO_ZERO",
                        "NEW_ORDER_LINE_ADDED_WITH_ALTERNATE_PRODUCT",
                        "NEW_ORDER_LINE_ADDED_WITH_CLEARANCE_PRODUCT",
                        "NOT_WITHIN_RESERVATION_PERIOD",
                        "MAX_ORDER_QUANTITY_EXCEEDED",
                        "STOCKS_PARTIALLY_ALLOCATED"
                    ]
                },
                "containedAmountBaseItem": {
                    "type": "number",
                    "format": "double"
                },
                "createdDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "crossDock": {
                    "type": "boolean"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "cutOff": {
                    "type": "string",
                    "format": "date-time"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "deliveryType": {
                    "type": "string"
                },
                "depositRelatedOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "discount": {
                    "type": "number",
                    "format": "double"
                },
                "discountOverridden": {
                    "type": "boolean"
                },
                "exchangeRate": {
                    "type": "number",
                    "format": "double"
                },
                "externalBookingId": {
                    "type": "string"
                },
                "externalBuyerProductId": {
                    "type": "string"
                },
                "externalProductId": {
                    "type": "string"
                },
                "gtin": {
                    "type": "string"
                },
                "homeAmount": {
                    "type": "number",
                    "format": "double"
                },
                "incoterm": {
                    "type": "string"
                },
                "isoCurrency": {
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineInformation": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderLineInformation"
                    }
                },
                "orderLineNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderLineType": {
                    "type": "string",
                    "enum": [
                        "PURCHASE",
                        "SALES",
                        "UNKNOWN"
                    ]
                },
                "orderSource": {
                    "type": "string"
                },
                "orderStatusId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "originalOrderLineReference": {
                    "type": "string"
                },
                "originalOrderReference": {
                    "type": "string"
                },
                "originalOrderedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "packaging": {
                    "$ref": "#/definitions/Packaging"
                },
                "packagingName": {
                    "type": "string"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "packagingTypeCode": {
                    "type": "string"
                },
                "pickDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "priceMeasurementInfo": {
                    "$ref": "#/definitions/PriceMeasurementInfo"
                },
                "priceOverridden": {
                    "type": "boolean"
                },
                "priority": {
                    "type": "integer",
                    "format": "int32"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productName": {
                    "type": "string"
                },
                "relatedPurchaseOrderLines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrderLineRelationshipDto"
                    }
                },
                "stockOutCode": {
                    "type": "string"
                },
                "updatedDeliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "updatedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "vat": {
                    "type": "number",
                    "format": "double"
                },
                "vatPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "volume": {
                    "$ref": "#/definitions/Volume"
                },
                "warehouseGln": {
                    "type": "string",
                    "description": "Warehouse GLN is an optional field that is used to define as an identifier when warehouseId is not provided On Creation"
                },
                "warehouseId": {
                    "type": "integer",
                    "format": "int64"
                },
                "weight": {
                    "$ref": "#/definitions/Weight"
                }
            },
            "title": "SalesOrderLine"
        },
        "SalesOrderLineShipmentNoteData": {
            "type": "object",
            "required": [
                "palletInformation"
            ],
            "properties": {
                "batchNumber": {
                    "type": "string"
                },
                "deliveryDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "expirationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "gtin": {
                    "type": "string"
                },
                "palletInformation": {
                    "description": "Required on Creation",
                    "$ref": "#/definitions/PalletInformation"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "salesOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "salesOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "shipmentNoticeDataId": {
                    "type": "integer",
                    "format": "int64"
                },
                "shippedWeight": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "SalesOrderLineShipmentNoteData"
        },
        "Stock": {
            "type": "object",
            "properties": {
                "avgPrice": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string"
                },
                "fromDate": {
                    "type": "string",
                    "format": "date"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantAccountExternalId": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productExternalId": {
                    "type": "string"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "quantityBreakdown": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "reasonCode": {
                    "type": "string",
                    "enum": [
                        "EXPIRATION",
                        "BREAKAGE",
                        "ADJUSTMENTS",
                        "INITIAL_STOCK",
                        "MARK_FOR_INVOICING",
                        "REVERT_ON_CANCELLATION",
                        "GOODS_RECEPTION",
                        "ADJUSTMENTS_FROM_CASH_REGISTER",
                        "OTHER_REASON"
                    ]
                },
                "stockId": {
                    "type": "integer",
                    "format": "int64"
                },
                "structureSetIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "toDate": {
                    "type": "string",
                    "format": "date"
                }
            },
            "title": "Stock"
        },
        "StockCreationRequestDto": {
            "type": "object",
            "required": [
                "participantAccountId",
                "productId",
                "quantity"
            ],
            "properties": {
                "avgPrice": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string"
                },
                "freeText": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "packagingTypeCode": {
                    "type": "string"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required on Creation"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required on Creation"
                },
                "quantity": {
                    "type": "number",
                    "format": "double",
                    "description": "Required on Creation"
                },
                "reasonCode": {
                    "type": "string",
                    "enum": [
                        "EXPIRATION",
                        "BREAKAGE",
                        "ADJUSTMENTS",
                        "INITIAL_STOCK",
                        "MARK_FOR_INVOICING",
                        "REVERT_ON_CANCELLATION",
                        "GOODS_RECEPTION",
                        "ADJUSTMENTS_FROM_CASH_REGISTER",
                        "OTHER_REASON"
                    ]
                }
            },
            "title": "StockCreationRequestDto"
        },
        "StockOutCode": {
            "type": "object",
            "properties": {
                "boundToProduct": {
                    "type": "boolean"
                },
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "internal": {
                    "type": "boolean"
                },
                "stockOutCodeId": {
                    "type": "integer",
                    "format": "int64"
                },
                "wipeOutOnGoodsReception": {
                    "type": "boolean"
                }
            },
            "title": "StockOutCode"
        },
        "StockReservationConfig": {
            "type": "object",
            "required": [
                "duration",
                "structureSet"
            ],
            "properties": {
                "duration": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Required on Creation"
                },
                "overriddenDurationForPriorityLines": {
                    "type": "integer",
                    "format": "int64"
                },
                "stockReservationConfigId": {
                    "type": "integer",
                    "format": "int64"
                },
                "structureSet": {
                    "description": "Required on Creation",
                    "$ref": "#/definitions/StructureSet"
                }
            },
            "title": "StockReservationConfig"
        },
        "StockUpdateRequestDto": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "freeText": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "participantAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "quantity": {
                    "type": "number",
                    "format": "double"
                },
                "reasonCode": {
                    "type": "string",
                    "enum": [
                        "EXPIRATION",
                        "BREAKAGE",
                        "ADJUSTMENTS",
                        "INITIAL_STOCK",
                        "MARK_FOR_INVOICING",
                        "REVERT_ON_CANCELLATION",
                        "GOODS_RECEPTION",
                        "ADJUSTMENTS_FROM_CASH_REGISTER",
                        "OTHER_REASON"
                    ]
                }
            },
            "title": "StockUpdateRequestDto"
        },
        "StoreChain": {
            "type": "object",
            "properties": {
                "chainId": {
                    "type": "integer",
                    "format": "int64"
                },
                "chainName": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "integrationMappingCode": {
                    "type": "string"
                }
            },
            "title": "StoreChain"
        },
        "StreamingResponseBody": {
            "type": "object",
            "title": "StreamingResponseBody"
        },
        "StructureGroupSet": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "structureGroupSetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "structureGroupSetName": {
                    "type": "string"
                },
                "structureSetIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "systemType": {
                    "type": "boolean"
                }
            },
            "title": "StructureGroupSet"
        },
        "StructureSet": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "packagings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Packaging"
                    }
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "structureSetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "structureSetName": {
                    "type": "string"
                },
                "systemType": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "StructureSet"
        },
        "SupplierScheduleFilterBulkCriteria": {
            "type": "object",
            "properties": {
                "productExternalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "productIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "supplierExternalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "supplierIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "SupplierScheduleFilterBulkCriteria"
        },
        "SupplierScheduleRequestDto": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "string"
                },
                "deliveryDaysDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "deliveryHoursDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "frequencyId": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderDaysDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderHoursDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "pickupDaysDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "pickupHoursDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "scheduleStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "structureSetId": {
                    "type": "integer",
                    "format": "int64"
                },
                "supplierId": {
                    "type": "integer",
                    "format": "int64"
                },
                "supplierScheduleType": {
                    "type": "string"
                },
                "warehouseId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "SupplierScheduleRequestDto"
        },
        "SupplierScheduleResponseDto": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "string",
                    "enum": [
                        "MONDAY",
                        "TUESDAY",
                        "WEDNESDAY",
                        "THURSDAY",
                        "FRIDAY",
                        "SATURDAY",
                        "SUNDAY"
                    ]
                },
                "deliveryDaysDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "deliveryHoursDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "frequency": {
                    "$ref": "#/definitions/Frequency"
                },
                "orderDaysDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "orderHoursDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "pickupDaysDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "pickupHoursDeadlineOffset": {
                    "type": "integer",
                    "format": "int64"
                },
                "scheduleStart": {
                    "type": "string",
                    "format": "date-time"
                },
                "structureSet": {
                    "$ref": "#/definitions/StructureSet"
                },
                "supplierExternalId": {
                    "type": "string"
                },
                "supplierId": {
                    "type": "integer",
                    "format": "int64"
                },
                "supplierScheduleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "supplierScheduleTask": {
                    "$ref": "#/definitions/SupplierScheduleTask"
                },
                "supplierScheduleType": {
                    "type": "string"
                },
                "warehouseId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "SupplierScheduleResponseDto"
        },
        "SupplierScheduleTask": {
            "type": "object",
            "properties": {
                "lastScheduleTaskDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "nextScheduleTaskDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "supplierScheduleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "supplierScheduleTaskId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "SupplierScheduleTask"
        },
        "SyncFailureGetDto": {
            "type": "object",
            "properties": {
                "entityIdInTrace": {
                    "type": "integer",
                    "format": "int64"
                },
                "entityType": {
                    "type": "string"
                },
                "externalId": {
                    "type": "string"
                },
                "failure": {
                    "$ref": "#/definitions/FailureGetDto"
                }
            },
            "title": "SyncFailureGetDto"
        },
        "TariffQuota": {
            "type": "object",
            "required": [
                "dateFrom",
                "dateTo",
                "originalQuota",
                "structureSet"
            ],
            "properties": {
                "cutoffQuantityPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "dateFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required on Creation"
                },
                "dateTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Required on Creation"
                },
                "originalQuota": {
                    "type": "number",
                    "format": "double",
                    "description": "Required on Creation"
                },
                "structureSet": {
                    "description": "Required on Creation",
                    "$ref": "#/definitions/StructureSet"
                },
                "tariffQuotaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "unitType": {
                    "type": "string"
                },
                "updatedQuota": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "TariffQuota"
        },
        "Temperature": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "unit": {
                    "type": "string",
                    "enum": [
                        "Celsius",
                        "Kelvin",
                        "Fahrenheit"
                    ]
                }
            },
            "title": "Temperature"
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "baseAmount": {
                    "type": "number",
                    "format": "double"
                },
                "basePrice": {
                    "type": "number",
                    "format": "double"
                },
                "comment": {
                    "type": "string"
                },
                "costPrice": {
                    "type": "number",
                    "format": "double"
                },
                "count": {
                    "type": "number",
                    "format": "double"
                },
                "discount": {
                    "type": "number",
                    "format": "double"
                },
                "exchangeRate": {
                    "type": "number",
                    "format": "double"
                },
                "fee": {
                    "type": "number",
                    "format": "double"
                },
                "freeText": {
                    "type": "string"
                },
                "homeAmount": {
                    "type": "number",
                    "format": "double"
                },
                "image": {
                    "type": "string"
                },
                "isoCurrency": {
                    "type": "string"
                },
                "margin": {
                    "type": "number",
                    "format": "double"
                },
                "orderType": {
                    "type": "string"
                },
                "packagingStructureId": {
                    "type": "integer",
                    "format": "int64"
                },
                "participantAccountId": {
                    "type": "integer",
                    "format": "int64"
                },
                "price": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "reason": {
                    "type": "string",
                    "enum": [
                        "EXPIRATION",
                        "BREAKAGE",
                        "ADJUSTMENTS",
                        "INITIAL_STOCK",
                        "MARK_FOR_INVOICING",
                        "REVERT_ON_CANCELLATION",
                        "GOODS_RECEPTION",
                        "ADJUSTMENTS_FROM_CASH_REGISTER",
                        "OTHER_REASON"
                    ]
                },
                "resolvedQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "salesOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "salesOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sequenceNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "ticketNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "transactionDate": {
                    "type": "string",
                    "format": "date"
                },
                "transactionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "Transaction"
        },
        "UnprocessedPurchaseInvoiceLine": {
            "type": "object",
            "properties": {
                "amountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "amountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "chargeVat": {
                    "type": "boolean"
                },
                "comment": {
                    "type": "string"
                },
                "discount": {
                    "type": "number",
                    "format": "double"
                },
                "externalProductId": {
                    "type": "string"
                },
                "gtin": {
                    "type": "string"
                },
                "invoiceDate": {
                    "type": "string",
                    "format": "date"
                },
                "invoiceLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "invoiceLinePrice": {
                    "type": "number",
                    "format": "double"
                },
                "invoiceLineQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "packagingTypeCode": {
                    "type": "string"
                },
                "participant": {
                    "$ref": "#/definitions/Participant"
                },
                "processed": {
                    "type": "boolean"
                },
                "productId": {
                    "type": "integer",
                    "format": "int64"
                },
                "productName": {
                    "type": "string"
                },
                "purchaseInvoiceId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineAmountVatExcluded": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineAmountVatIncluded": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineId": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLineNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "purchaseOrderLinePrice": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineQuantity": {
                    "type": "number",
                    "format": "double"
                },
                "purchaseOrderLineVat": {
                    "type": "number",
                    "format": "double"
                },
                "supplier": {
                    "$ref": "#/definitions/ParticipantAccount"
                },
                "vatPercentage": {
                    "type": "number",
                    "format": "double"
                },
                "warehouse": {
                    "$ref": "#/definitions/ParticipantAccount"
                }
            },
            "title": "UnprocessedPurchaseInvoiceLine"
        },
        "Vat": {
            "type": "object",
            "properties": {
                "vatAmount": {
                    "type": "number",
                    "format": "double"
                },
                "vatId": {
                    "type": "integer",
                    "format": "int64"
                },
                "vatName": {
                    "type": "string"
                },
                "vatTypeId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "Vat"
        },
        "Volume": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "unit": {
                    "type": "string",
                    "enum": [
                        "Milliliter",
                        "CubicCentimeter",
                        "Liter",
                        "Pint",
                        "CubicDecimeter",
                        "Gallon",
                        "CubicMeter"
                    ]
                }
            },
            "title": "Volume"
        },
        "Webhook": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "Webhook"
        },
        "WebhookMessagesRepublishRequest": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "actionType": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "description": "Required on Creation",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "title": "WebhookMessagesRepublishRequest"
        },
        "Weight": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "unit": {
                    "type": "string",
                    "enum": [
                        "Milligram",
                        "Gram",
                        "Kilogram",
                        "Tonne"
                    ]
                }
            },
            "title": "Weight"
        }
    }
}